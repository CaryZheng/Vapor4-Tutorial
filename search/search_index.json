{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u5e8f Vapor \u662f\u57fa\u4e8e Swift \u5b9e\u73b0\u7684 Web \u6846\u67b6\uff0c\u53ef\u8fd0\u884c\u4e8e macOS \u548c Ubuntu \u7cfb\u7edf\u4e0a\u3002 \u672c\u6559\u7a0b\u4e3b\u8981\u662f\u9488\u5bf9 Vapor 4 \u7684\u901f\u6210\u6307\u5357\u3002\uff08\u6ce8\uff1a\u9010\u6b65\u66f4\u65b0\u4e2d\uff09 Contact QQ\u7fa4 (Vapor\u4ea4\u6d41)\uff1a 566732724 Swift \u6280\u672f\u535a\u5ba2\uff1a www.carymic.com \u5fae\u4fe1\u516c\u4f17\u53f7\uff1aSwiftMic \u8054\u7cfb\u4f5c\u8005\uff1aCaryZhengMy#gmail.com \uff08# \u66ff\u6362\u6210 @\uff09 \u53cd\u9988 \u82e5\u53d1\u73b0\u6559\u7a0b\u4e2d\u6709\u4efb\u4f55\u95ee\u9898\uff0c\u6b22\u8fce\u63d0 Issue \u548c Pull Request \u3002 \u4ee3\u7801 \u6559\u7a0b\u793a\u4f8b\u4ee3\u7801\uff1a Vapor4Example \u58f0\u660e \u672c\u6559\u7a0b\u7248\u6743\u5f52\u4f5c\u8005 CaryZheng \u6240\u6709\uff0c\u672a\u7ecf\u4f5c\u8005\u8bb8\u53ef\uff0c\u4e0d\u5f97\u7528\u4e8e\u5546\u4e1a\u7528\u9014\u3002 \u6350\u8d60 \u5982\u679c\u6b64\u6559\u7a0b\u5bf9\u4f60\u6709\u6240\u5e2e\u52a9\uff0c\u53ef\u4ee5\u8d60\u9001\u4f5c\u8005\u4e00\u676f \u201c\u5496\u5561\u201d\u3002 \u5fae\u4fe1\u652f\u4ed8","title":"\u5e8f"},{"location":"#_1","text":"Vapor \u662f\u57fa\u4e8e Swift \u5b9e\u73b0\u7684 Web \u6846\u67b6\uff0c\u53ef\u8fd0\u884c\u4e8e macOS \u548c Ubuntu \u7cfb\u7edf\u4e0a\u3002 \u672c\u6559\u7a0b\u4e3b\u8981\u662f\u9488\u5bf9 Vapor 4 \u7684\u901f\u6210\u6307\u5357\u3002\uff08\u6ce8\uff1a\u9010\u6b65\u66f4\u65b0\u4e2d\uff09","title":"\u5e8f"},{"location":"#contact","text":"QQ\u7fa4 (Vapor\u4ea4\u6d41)\uff1a 566732724 Swift \u6280\u672f\u535a\u5ba2\uff1a www.carymic.com \u5fae\u4fe1\u516c\u4f17\u53f7\uff1aSwiftMic \u8054\u7cfb\u4f5c\u8005\uff1aCaryZhengMy#gmail.com \uff08# \u66ff\u6362\u6210 @\uff09","title":"Contact"},{"location":"#_2","text":"\u82e5\u53d1\u73b0\u6559\u7a0b\u4e2d\u6709\u4efb\u4f55\u95ee\u9898\uff0c\u6b22\u8fce\u63d0 Issue \u548c Pull Request \u3002","title":"\u53cd\u9988"},{"location":"#_3","text":"\u6559\u7a0b\u793a\u4f8b\u4ee3\u7801\uff1a Vapor4Example","title":"\u4ee3\u7801"},{"location":"#_4","text":"\u672c\u6559\u7a0b\u7248\u6743\u5f52\u4f5c\u8005 CaryZheng \u6240\u6709\uff0c\u672a\u7ecf\u4f5c\u8005\u8bb8\u53ef\uff0c\u4e0d\u5f97\u7528\u4e8e\u5546\u4e1a\u7528\u9014\u3002","title":"\u58f0\u660e"},{"location":"#_5","text":"\u5982\u679c\u6b64\u6559\u7a0b\u5bf9\u4f60\u6709\u6240\u5e2e\u52a9\uff0c\u53ef\u4ee5\u8d60\u9001\u4f5c\u8005\u4e00\u676f \u201c\u5496\u5561\u201d\u3002 \u5fae\u4fe1\u652f\u4ed8","title":"\u6350\u8d60"},{"location":"deploy/","text":"\u90e8\u7f72 TODO","title":"\u90e8\u7f72"},{"location":"deploy/#_1","text":"TODO","title":"\u90e8\u7f72"},{"location":"hello_world/","text":"Hello World \u672c\u7ae0\u6559\u7a0b\u6559\u5c06\u5e26\u4f60\u521b\u5efa\u7b2c\u4e00\u4e2a Vapor \u9879\u76ee\u3002 \u521b\u5efa\u9879\u76ee \u901a\u8fc7 vapor \u547d\u4ee4\u884c\u5de5\u5177\u521b\u5efa\u9879\u76ee\uff0c\u9879\u76ee\u540d\u79f0\u547d\u540d\u4e3a ExampleHello \u3002 vapor new ExampleHello -branch=4 \u521b\u5efa\u6210\u529f\u540e\uff0c\u5c06\u8f93\u51fa\u5982\u4e0b\u4fe1\u606f\u3002 Cloning Template [Done] Updating Package Name [Done] Initializing git repository [Done] ** **~~** **~~~~~~** **~~~~~~~~~~** **~~~~~~~~~~~~~~** **~~~~~~~~~~~~~~~~~~** **~~~~~~~~~~~~~~~~~~~~~~** **~~~~~~~~~~~~~~~~~~~~~~~~** **~~~~~~~~~~~~~~~~~~~~~~~~~~** **~~~~~~~~~~~~~~~~~~~~~~~~~~~~** **~~~~~~~~~~~~~~~~~~~~~~~~~~~~** **~~~~~~~~~~~~~~~~~~~~~++++~~~** **~~~~~~~~~~~~~~~~~~~++++~~~** ***~~~~~~~~~~~~~~~++++~~~*** ****~~~~~~~~~~++++~~**** *****~~~~~~~~~***** ************* _ __ ___ ___ ___ \\ \\ / / /\\ | |_) / / \\ | |_) \\_\\/ /_/--\\ |_| \\_\\_/ |_| \\ a web framework for Swift Project ExampleHello has been created. Type `cd ExampleHello` to enter the project directory. Use `vapor cloud deploy` to host your project for free! Enjoy! \u8fd0\u884c\u9879\u76ee \u6b64\u65f6\uff0c\u6211\u4eec\u5148\u4e0d\u5206\u6790\u4ee3\u7801\uff0c\u5148\u5c06\u8be5 vapor \u9879\u76ee run \u8d77\u6765\uff0c\u770b\u770b\u6700\u7ec8\u6548\u679c\u3002 \u6b65\u9aa4\u5982\u4e0b\uff1a \u6267\u884c cd ExampleHello \u8fdb\u5165\u5230\u521a\u521b\u5efa\u597d\u7684\u9879\u76ee\u76ee\u5f55\u4e2d\u3002 \u901a\u8fc7\u5982\u4e0b\u547d\u4ee4 build \u9879\u76ee\u4ee3\u7801\u3002 vapor build build \u6210\u529f\u540e\u5c06\u8f93\u51fa\u5982\u4e0b\u4fe1\u606f\u3002 Building Project [Done] \u901a\u8fc7\u5982\u4e0b\u547d\u4ee4 run \u9879\u76ee\u3002 vapor run \u8fd9\u65f6\u5019\u5c06\u8f93\u51fa\u5982\u4e0b\u4fe1\u606f\u3002 Running app ... [ NOTICE ] Server starting on http://127.0.0.1:8080 \u7136\u540e\u8bbf\u95ee http://127.0.0.1:8080 \u5730\u5740\uff0c\u5982\u679c\u8fd4\u56de It works! \uff0c\u5219\u610f\u5473\u7740\u4f60\u7684\u7b2c\u4e00\u4e2a vapor \u9879\u76ee\u5df2\u7ecf run \u6210\u529f\u4e86\u3002 \u751f\u6210 Xcode \u9879\u76ee \u6267\u884c vapor xcode \u547d\u4ee4\uff0c\u5c06\u4f1a\u81ea\u52a8\u751f\u6210\u4e00\u4e2a\u5b8c\u6574\u7684 Xcode \u9879\u76ee\u3002 $ vapor xcode Generating Xcode Project [Done] Select the `Run` scheme to run. Open Xcode project? y/n y Opening Xcode project... \u53ef\u4ee5\u9009\u62e9 Xcode \u4e2d\u7684 Run scheme \u8fdb\u884c\u7f16\u8bd1\u8fd0\u884c\u3002 \u5982\u56fe\u6240\u793a \u76ee\u5f55\u7ed3\u6784 \u63a5\u4e0b\u6765\u5c06\u5206\u6790\u4e0b\u9879\u76ee\u7684\u76ee\u5f55\u7ed3\u6784\uff0c\u5982\u4e0b\u6240\u793a\u3002 . \u251c\u2500\u2500 Public \u251c\u2500\u2500 Sources \u2502 \u251c\u2500\u2500 App \u2502 \u2502 \u251c\u2500\u2500 Controllers \u2502 \u2502 \u251c\u2500\u2500 Migrations \u2502 \u2502 \u251c\u2500\u2500 Models \u2502 \u2502 \u251c\u2500\u2500 configure.swift \u2502 \u2502 \u2514\u2500\u2500 routes.swift \u2502 \u2514\u2500\u2500 Run \u2502 \u2514\u2500\u2500 main.swift \u251c\u2500\u2500 Tests \u2502 \u2514\u2500\u2500 AppTests \u2514\u2500\u2500 Package.swift Public \u8be5\u76ee\u5f55\u4e3b\u8981\u5b58\u653e\u4e00\u4e9b\u53ef\u516c\u5f00\u8bbf\u95ee\u7684\u8d44\u6e90\u6587\u4ef6\uff0c\u6bd4\u5982\u56fe\u7247\u6587\u4ef6\u3001 CSS \u6587\u4ef6\u4ee5\u53ca JavaScript \u6587\u4ef6\u7b49\u3002 \u9996\u5148\uff0c\u9700\u4fee\u6539 configure.swift \u6587\u4ef6\u6765\u5f00\u542f\u4f7f\u7528 FileMiddleware \u4e2d\u95f4\u4ef6\u3002 // Called before your application initializes. public func configure ( _ app : Application ) throws { ...... // Serves files from `Public/` directory app . middleware . use ( FileMiddleware ( publicDirectory : app . directory . publicDirectory )) ...... } \u7136\u540e\uff0c\u6240\u6709 Public/ \u76ee\u5f55\u4e0b\u7684\u8d44\u6e90\u6587\u4ef6\u5747\u53ef\u76f4\u63a5\u88ab\u8bbf\u95ee\u4e86\u3002\u6bd4\u5982 Public/ \u76ee\u5f55\u4e0b\u6709\u4e00\u5f20\u56fe\u7247\uff08\u547d\u540d\u4e3a sample.png \uff09\uff0c\u5728\u672c\u5730\u670d\u52a1\u5df2\u542f\u52a8\u7684\u60c5\u51b5\u4e0b\uff08\u5047\u8bbe\u6240\u5360\u7aef\u53e3\u4e3a 8080 \uff09\uff0c\u8bbf\u95ee http://localhost:8080/sample.png \u5730\u5740\u53ef\u76f4\u63a5\u663e\u793a Public/ \u76ee\u5f55\u4e0b\u7684 sample.png \u56fe\u7247\u3002 \u6548\u679c\u5982\u4e0b Sources \u8be5\u76ee\u5f55\u7528\u4e8e\u5b58\u653e\u6e90\u4ee3\u7801\u3002 App \u4e3b\u8981\u662f\u7528\u6765\u5b58\u653e\u4e1a\u52a1\u76f8\u5173\u7684\u4ee3\u7801\u3002 Controllers\uff1a\u7528\u4e8e\u5b58\u653e\u5177\u4f53\u4e1a\u52a1\u903b\u8f91\u7684\u5b9e\u73b0\u4ee3\u7801\u3002 Migrations\uff1a\u7528\u4e8e\u5b58\u653e\u6570\u636e\u5e93\u8fc1\u79fb\u76f8\u5173\u7684\u4ee3\u7801\u3002 Models\uff1a\u7528\u4e8e\u5b58\u653e\u6570\u636e\u6a21\u578b\u76f8\u5173\u7684\u4ee3\u7801\u3002 configure.swift\uff1a\u7528\u4e8e\u670d\u52a1\u914d\u7f6e\u76f8\u5173\u7684\u4ee3\u7801\u6587\u4ef6\u3002 routes.swift\uff1a\u7528\u4e8e API \u8bf7\u6c42\u7684\u8def\u7531\u63a7\u5236\u3002 Run \u8be5\u76ee\u5f55\u4e0b\u6709\u4e00\u4e2a main.swift \u6587\u4ef6\uff0c\u662f\u6574\u4e2a\u7a0b\u5e8f\u7684\u6267\u884c\u5165\u53e3\u3002 Tests \u8be5\u76ee\u5f55\u4e3b\u8981\u662f\u7528\u4e8e\u5b58\u653e\u6d4b\u8bd5\u76f8\u5173\u7684\u4ee3\u7801\u3002 Package.swift Vapor \u9879\u76ee\u6240\u4f9d\u8d56\u7684\u5e93\u662f\u901a\u8fc7 SPM\uff08Swift Package Manager\uff09 \u6765\u8fdb\u884c\u7ba1\u7406\u7684\u3002 \u793a\u4f8b\u5982\u4e0b // swift-tools-version:5.2 import PackageDescription let package = Package ( name : app , platforms : [ . macOS (. v10_15 ) ], products : [ . executable ( name : Run , targets : [ Run ]), . library ( name : App , targets : [ App ]), ], dependencies : [ // \ud83d\udca7 A server-side Swift web framework. . package ( url : https://github.com/vapor/vapor.git , from : 4.0.0-rc.1 ), . package ( url : https://github.com/vapor/fluent.git , from : 4.0.0-rc.1 ), . package ( url : https://github.com/vapor/fluent-sqlite-driver.git , from : 4.0.0-rc.1 ), ], targets : [ . target ( name : App , dependencies : [ . product ( name : Fluent , package : fluent ), . product ( name : FluentSQLiteDriver , package : fluent-sqlite-driver ), . product ( name : Vapor , package : vapor ), ]), . target ( name : Run , dependencies : [ . target ( name : App ), ]), . testTarget ( name : AppTests , dependencies : [ . target ( name : App ), . product ( name : XCTVapor , package : vapor ), ]) ] ) \u7b80\u6790 Vapor \u542f\u52a8\u8fc7\u7a0b \u63a5\u4e0b\u6765\u6211\u4eec\u7b80\u5355\u5206\u6790\u4e0b Vapor \u793a\u4f8b\u9879\u76ee\u542f\u52a8\u7684\u8fc7\u7a0b\u3002 \u9996\u5148\u6765\u770b\u4e0b main.swift \u6587\u4ef6\uff0c\u8fd9\u4e2a\u662f\u6574\u4e2a\u7a0b\u5e8f\u6267\u884c\u7684\u5165\u53e3\u3002 import App import Vapor var env = try Environment . detect () try LoggingSystem . bootstrap ( from : env ) let app = Application ( env ) defer { app . shutdown () } try configure ( app ) try app . run () import App \u548c import Vapor \u662f\u7528\u6765\u5bfc\u5165 App \u548c Vapor library \u7684\uff0c\u901a\u8fc7\u6267\u884c try app.run() \u8fd0\u884c\u670d\u52a1\u3002 \u5176\u4e2d\uff0c Environment.detect() \u65b9\u6cd5\u662f\u7528\u6765\u68c0\u6d4b\u5f53\u524d\u8fd0\u884c\u73af\u5883\uff0c\u6e90\u7801\u5982\u4e0b public static func detect ( arguments : [ String ] = CommandLine . arguments ) throws - Environment { var commandInput = CommandInput ( arguments : arguments ) return try Environment . detect ( from : commandInput ) } \u4ece\u4ee3\u7801\u4e2d\u53ef\u4ee5\u770b\u51fa\uff0c\u6839\u636e env \u53c2\u6570\uff0c\u5148\u521d\u59cb\u5316\u4e86\u65e5\u5fd7\u7cfb\u7edf LoggingSystem \uff0c\u7136\u540e\u521b\u5efa\u4e86 Application \u5b9e\u4f8b\u5bf9\u8c61\uff0c\u6700\u540e\u518d\u8c03\u7528 configure() \u65b9\u6cd5\u6765\u521d\u59cb\u5316\u914d\u7f6e\u3002 configure() \u65b9\u6cd5\u5b9a\u4e49\u5728 configure.swift \u4e2d\uff0c\u6e90\u7801\u5982\u4e0b // Called before your application initializes. public func configure ( _ app : Application ) throws { // Serves files from `Public/` directory // app.middleware.use(FileMiddleware(publicDirectory: app.directory.publicDirectory)) // Configure SQLite database app . databases . use (. sqlite (. file ( db.sqlite )), as : . sqlite ) // Configure migrations app . migrations . add ( CreateTodo ()) try routes ( app ) } \u4ece\u6e90\u7801\u4e2d\u53ef\u89c1\uff0c configure() \u65b9\u6cd5\u5185\u90e8\u6ce8\u518c\u4e86 middleware \uff08\u6bd4\u5982\uff1a FileMiddleware \uff09\u3001\u6570\u636e\u5e93\u76f8\u5173\u7684\u914d\u7f6e\uff0c\u4ee5\u53ca API \u8def\u7531\u7684\u914d\u7f6e\u3002\uff08\u6ce8\uff1a\u8fd9\u91cc\u5c31\u4e0d\u5c55\u5f00\u8ba8\u8bba\u8fd9\u4e9b Vapor \u7ec4\u4ef6\u4e86\uff0c\u6bd4\u5982 Middleware \u7b49\uff0c\u540e\u7eed\u7ae0\u8282\u5c06\u8fdb\u884c\u8be6\u7ec6\u4ecb\u7ecd\u3002\uff09 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u770b\u4e0b routes() \u65b9\u6cd5\u7684\u5b9e\u73b0\uff0c\u5b83\u662f\u5b9a\u4e49\u5728 routes.swift \u6587\u4ef6\u4e2d\uff0c\u6e90\u7801\u5982\u4e0b func routes ( _ app : Application ) throws { app . get { req in return It works! } app . get ( hello ) { req in return Hello, world! } let todoController = TodoController () app . get ( todos , use : todoController . index ) app . post ( todos , use : todoController . create ) app . on (. DELETE , todos , :todoID , use : todoController . delete ) } \u4e4b\u524d\uff0c\u8bbf\u95ee http://127.0.0.1:8080 \u5730\u5740\uff0c\u8fd4\u56de\u4e86 It works! \u6587\u672c\uff0c\u5176\u5b9e\u5bf9\u5e94\u7684\u5c31\u662f\u8fd9\u90e8\u5206\u4ee3\u7801\u3002 app . get { req in return It works! } \u8fd9\u662f\u5728\u6839\u8def\u5f84\u4e0b\uff0c\u76d1\u542c\u4e86 GET \u884c\u4e3a\uff0c\u5f53\u901a\u8fc7 GET \u65b9\u5f0f\u8bf7\u6c42\u6839\u8def\u5f84\uff08\u6bd4\u5982\uff1a http://127.0.0.1:8080 \uff09\u65f6\uff0c\u5c06\u8fd4\u56de\u4e00\u4e32\u6587\u672c It works! \u3002 \u540c\u7406\uff0c\u7b2c\u4e8c\u6bb5\u4ee3\u7801 app . get ( hello ) { req in return Hello, world! } \u76d1\u542c\u4e86\u8def\u5f84\u4e3a hello \u7684 GET \u8bf7\u6c42\uff0c\u5f53\u901a\u8fc7 GET \u65b9\u5f0f\u8bf7\u6c42\u5bf9\u5e94\u8def\u5f84\uff08\u6bd4\u5982\uff1a http://127.0.0.1:8080/hello \uff09\u65f6\uff0c\u5c06\u8fd4\u56de\u4e00\u4e32\u6587\u672c Hello, world! \u3002 \u518d\u770b\u4e0b\u7b2c\u4e09\u6bb5\u4ee3\u7801 let todoController = TodoController () // \u8bf7\u6c42\u8def\u5f84\uff1atodos\uff0c\u8bf7\u6c42\u65b9\u6cd5: GET\uff0c\u54cd\u5e94\u65b9\u6cd5\uff1aindex\u3002 app . get ( todos , use : todoController . index ) // \u8bf7\u6c42\u8def\u5f84\uff1atodos\uff0c\u8bf7\u6c42\u65b9\u6cd5: POST\uff0c\u54cd\u5e94\u65b9\u6cd5\uff1acreate\u3002 app . post ( todos , use : todoController . create ) // \u8bf7\u6c42\u8def\u5f84\uff1atodos\uff0c\u8bf7\u6c42\u65b9\u6cd5: DELETE\uff0c\u54cd\u5e94\u65b9\u6cd5\uff1adelete\u3002 app . on (. DELETE , todos , :todoID , use : todoController . delete ) \u8def\u5f84\u4e3a todos \u7684\u8bf7\u6c42\uff08 GET \u3001 POST \u3001 DELETE \uff09\u90fd\u5c06\u88ab\u6620\u5c04\u5230 TodoController \u4e2d\uff0c\u5728\u8be5 Controller \u4e2d\u53ef\u4ee5\u5904\u7406\u76f8\u5173\u7684\u4e1a\u52a1\u903b\u8f91\u3002 struct TodoController { func index ( req : Request ) throws - EventLoopFuture [ Todo ] { ...... } func create ( req : Request ) throws - EventLoopFuture Todo { ...... } func delete ( req : Request ) throws - EventLoopFuture HTTPStatus { ...... } } \u56de\u5230 main.swift \u6587\u4ef6\uff0c\u5f53 app \u5b9e\u4f8b\u521d\u59cb\u5316\u540e\uff0c\u6700\u540e\u5c06\u6267\u884c run() \u65b9\u6cd5\u6765\u542f\u52a8\u670d\u52a1\u3002 try app . run () run() \u6e90\u7801\u5982\u4e0b public func run () throws { do { try self . start () try self . running ?. onStop . wait () } catch { self . logger . report ( error : error ) throw error } } \u81f3\u6b64\uff0c\u6211\u4eec\u5bf9 Vapor \u9879\u76ee\u542f\u52a8\u7684\u6267\u884c\u8fc7\u7a0b\u6709\u4e86\u5927\u81f4\u7684\u4e86\u89e3\uff0c\u540e\u9762\u5c06\u5177\u4f53\u4ecb\u7ecd Vapor \u7684\u5404\u4e2a\u6a21\u5757\u3002 \u793a\u4f8b\u4ee3\u7801 \u53ef\u53c2\u8003\uff1a ExampleHello","title":"Hello World"},{"location":"hello_world/#hello-world","text":"\u672c\u7ae0\u6559\u7a0b\u6559\u5c06\u5e26\u4f60\u521b\u5efa\u7b2c\u4e00\u4e2a Vapor \u9879\u76ee\u3002","title":"Hello World"},{"location":"hello_world/#_1","text":"\u901a\u8fc7 vapor \u547d\u4ee4\u884c\u5de5\u5177\u521b\u5efa\u9879\u76ee\uff0c\u9879\u76ee\u540d\u79f0\u547d\u540d\u4e3a ExampleHello \u3002 vapor new ExampleHello -branch=4 \u521b\u5efa\u6210\u529f\u540e\uff0c\u5c06\u8f93\u51fa\u5982\u4e0b\u4fe1\u606f\u3002 Cloning Template [Done] Updating Package Name [Done] Initializing git repository [Done] ** **~~** **~~~~~~** **~~~~~~~~~~** **~~~~~~~~~~~~~~** **~~~~~~~~~~~~~~~~~~** **~~~~~~~~~~~~~~~~~~~~~~** **~~~~~~~~~~~~~~~~~~~~~~~~** **~~~~~~~~~~~~~~~~~~~~~~~~~~** **~~~~~~~~~~~~~~~~~~~~~~~~~~~~** **~~~~~~~~~~~~~~~~~~~~~~~~~~~~** **~~~~~~~~~~~~~~~~~~~~~++++~~~** **~~~~~~~~~~~~~~~~~~~++++~~~** ***~~~~~~~~~~~~~~~++++~~~*** ****~~~~~~~~~~++++~~**** *****~~~~~~~~~***** ************* _ __ ___ ___ ___ \\ \\ / / /\\ | |_) / / \\ | |_) \\_\\/ /_/--\\ |_| \\_\\_/ |_| \\ a web framework for Swift Project ExampleHello has been created. Type `cd ExampleHello` to enter the project directory. Use `vapor cloud deploy` to host your project for free! Enjoy!","title":"\u521b\u5efa\u9879\u76ee"},{"location":"hello_world/#_2","text":"\u6b64\u65f6\uff0c\u6211\u4eec\u5148\u4e0d\u5206\u6790\u4ee3\u7801\uff0c\u5148\u5c06\u8be5 vapor \u9879\u76ee run \u8d77\u6765\uff0c\u770b\u770b\u6700\u7ec8\u6548\u679c\u3002 \u6b65\u9aa4\u5982\u4e0b\uff1a \u6267\u884c cd ExampleHello \u8fdb\u5165\u5230\u521a\u521b\u5efa\u597d\u7684\u9879\u76ee\u76ee\u5f55\u4e2d\u3002 \u901a\u8fc7\u5982\u4e0b\u547d\u4ee4 build \u9879\u76ee\u4ee3\u7801\u3002 vapor build build \u6210\u529f\u540e\u5c06\u8f93\u51fa\u5982\u4e0b\u4fe1\u606f\u3002 Building Project [Done] \u901a\u8fc7\u5982\u4e0b\u547d\u4ee4 run \u9879\u76ee\u3002 vapor run \u8fd9\u65f6\u5019\u5c06\u8f93\u51fa\u5982\u4e0b\u4fe1\u606f\u3002 Running app ... [ NOTICE ] Server starting on http://127.0.0.1:8080 \u7136\u540e\u8bbf\u95ee http://127.0.0.1:8080 \u5730\u5740\uff0c\u5982\u679c\u8fd4\u56de It works! \uff0c\u5219\u610f\u5473\u7740\u4f60\u7684\u7b2c\u4e00\u4e2a vapor \u9879\u76ee\u5df2\u7ecf run \u6210\u529f\u4e86\u3002","title":"\u8fd0\u884c\u9879\u76ee"},{"location":"hello_world/#xcode","text":"\u6267\u884c vapor xcode \u547d\u4ee4\uff0c\u5c06\u4f1a\u81ea\u52a8\u751f\u6210\u4e00\u4e2a\u5b8c\u6574\u7684 Xcode \u9879\u76ee\u3002 $ vapor xcode Generating Xcode Project [Done] Select the `Run` scheme to run. Open Xcode project? y/n y Opening Xcode project... \u53ef\u4ee5\u9009\u62e9 Xcode \u4e2d\u7684 Run scheme \u8fdb\u884c\u7f16\u8bd1\u8fd0\u884c\u3002 \u5982\u56fe\u6240\u793a","title":"\u751f\u6210 Xcode \u9879\u76ee"},{"location":"hello_world/#_3","text":"\u63a5\u4e0b\u6765\u5c06\u5206\u6790\u4e0b\u9879\u76ee\u7684\u76ee\u5f55\u7ed3\u6784\uff0c\u5982\u4e0b\u6240\u793a\u3002 . \u251c\u2500\u2500 Public \u251c\u2500\u2500 Sources \u2502 \u251c\u2500\u2500 App \u2502 \u2502 \u251c\u2500\u2500 Controllers \u2502 \u2502 \u251c\u2500\u2500 Migrations \u2502 \u2502 \u251c\u2500\u2500 Models \u2502 \u2502 \u251c\u2500\u2500 configure.swift \u2502 \u2502 \u2514\u2500\u2500 routes.swift \u2502 \u2514\u2500\u2500 Run \u2502 \u2514\u2500\u2500 main.swift \u251c\u2500\u2500 Tests \u2502 \u2514\u2500\u2500 AppTests \u2514\u2500\u2500 Package.swift","title":"\u76ee\u5f55\u7ed3\u6784"},{"location":"hello_world/#public","text":"\u8be5\u76ee\u5f55\u4e3b\u8981\u5b58\u653e\u4e00\u4e9b\u53ef\u516c\u5f00\u8bbf\u95ee\u7684\u8d44\u6e90\u6587\u4ef6\uff0c\u6bd4\u5982\u56fe\u7247\u6587\u4ef6\u3001 CSS \u6587\u4ef6\u4ee5\u53ca JavaScript \u6587\u4ef6\u7b49\u3002 \u9996\u5148\uff0c\u9700\u4fee\u6539 configure.swift \u6587\u4ef6\u6765\u5f00\u542f\u4f7f\u7528 FileMiddleware \u4e2d\u95f4\u4ef6\u3002 // Called before your application initializes. public func configure ( _ app : Application ) throws { ...... // Serves files from `Public/` directory app . middleware . use ( FileMiddleware ( publicDirectory : app . directory . publicDirectory )) ...... } \u7136\u540e\uff0c\u6240\u6709 Public/ \u76ee\u5f55\u4e0b\u7684\u8d44\u6e90\u6587\u4ef6\u5747\u53ef\u76f4\u63a5\u88ab\u8bbf\u95ee\u4e86\u3002\u6bd4\u5982 Public/ \u76ee\u5f55\u4e0b\u6709\u4e00\u5f20\u56fe\u7247\uff08\u547d\u540d\u4e3a sample.png \uff09\uff0c\u5728\u672c\u5730\u670d\u52a1\u5df2\u542f\u52a8\u7684\u60c5\u51b5\u4e0b\uff08\u5047\u8bbe\u6240\u5360\u7aef\u53e3\u4e3a 8080 \uff09\uff0c\u8bbf\u95ee http://localhost:8080/sample.png \u5730\u5740\u53ef\u76f4\u63a5\u663e\u793a Public/ \u76ee\u5f55\u4e0b\u7684 sample.png \u56fe\u7247\u3002 \u6548\u679c\u5982\u4e0b","title":"Public"},{"location":"hello_world/#sources","text":"\u8be5\u76ee\u5f55\u7528\u4e8e\u5b58\u653e\u6e90\u4ee3\u7801\u3002","title":"Sources"},{"location":"hello_world/#app","text":"\u4e3b\u8981\u662f\u7528\u6765\u5b58\u653e\u4e1a\u52a1\u76f8\u5173\u7684\u4ee3\u7801\u3002 Controllers\uff1a\u7528\u4e8e\u5b58\u653e\u5177\u4f53\u4e1a\u52a1\u903b\u8f91\u7684\u5b9e\u73b0\u4ee3\u7801\u3002 Migrations\uff1a\u7528\u4e8e\u5b58\u653e\u6570\u636e\u5e93\u8fc1\u79fb\u76f8\u5173\u7684\u4ee3\u7801\u3002 Models\uff1a\u7528\u4e8e\u5b58\u653e\u6570\u636e\u6a21\u578b\u76f8\u5173\u7684\u4ee3\u7801\u3002 configure.swift\uff1a\u7528\u4e8e\u670d\u52a1\u914d\u7f6e\u76f8\u5173\u7684\u4ee3\u7801\u6587\u4ef6\u3002 routes.swift\uff1a\u7528\u4e8e API \u8bf7\u6c42\u7684\u8def\u7531\u63a7\u5236\u3002","title":"App"},{"location":"hello_world/#run","text":"\u8be5\u76ee\u5f55\u4e0b\u6709\u4e00\u4e2a main.swift \u6587\u4ef6\uff0c\u662f\u6574\u4e2a\u7a0b\u5e8f\u7684\u6267\u884c\u5165\u53e3\u3002","title":"Run"},{"location":"hello_world/#tests","text":"\u8be5\u76ee\u5f55\u4e3b\u8981\u662f\u7528\u4e8e\u5b58\u653e\u6d4b\u8bd5\u76f8\u5173\u7684\u4ee3\u7801\u3002","title":"Tests"},{"location":"hello_world/#packageswift","text":"Vapor \u9879\u76ee\u6240\u4f9d\u8d56\u7684\u5e93\u662f\u901a\u8fc7 SPM\uff08Swift Package Manager\uff09 \u6765\u8fdb\u884c\u7ba1\u7406\u7684\u3002 \u793a\u4f8b\u5982\u4e0b // swift-tools-version:5.2 import PackageDescription let package = Package ( name : app , platforms : [ . macOS (. v10_15 ) ], products : [ . executable ( name : Run , targets : [ Run ]), . library ( name : App , targets : [ App ]), ], dependencies : [ // \ud83d\udca7 A server-side Swift web framework. . package ( url : https://github.com/vapor/vapor.git , from : 4.0.0-rc.1 ), . package ( url : https://github.com/vapor/fluent.git , from : 4.0.0-rc.1 ), . package ( url : https://github.com/vapor/fluent-sqlite-driver.git , from : 4.0.0-rc.1 ), ], targets : [ . target ( name : App , dependencies : [ . product ( name : Fluent , package : fluent ), . product ( name : FluentSQLiteDriver , package : fluent-sqlite-driver ), . product ( name : Vapor , package : vapor ), ]), . target ( name : Run , dependencies : [ . target ( name : App ), ]), . testTarget ( name : AppTests , dependencies : [ . target ( name : App ), . product ( name : XCTVapor , package : vapor ), ]) ] )","title":"Package.swift"},{"location":"hello_world/#vapor","text":"\u63a5\u4e0b\u6765\u6211\u4eec\u7b80\u5355\u5206\u6790\u4e0b Vapor \u793a\u4f8b\u9879\u76ee\u542f\u52a8\u7684\u8fc7\u7a0b\u3002 \u9996\u5148\u6765\u770b\u4e0b main.swift \u6587\u4ef6\uff0c\u8fd9\u4e2a\u662f\u6574\u4e2a\u7a0b\u5e8f\u6267\u884c\u7684\u5165\u53e3\u3002 import App import Vapor var env = try Environment . detect () try LoggingSystem . bootstrap ( from : env ) let app = Application ( env ) defer { app . shutdown () } try configure ( app ) try app . run () import App \u548c import Vapor \u662f\u7528\u6765\u5bfc\u5165 App \u548c Vapor library \u7684\uff0c\u901a\u8fc7\u6267\u884c try app.run() \u8fd0\u884c\u670d\u52a1\u3002 \u5176\u4e2d\uff0c Environment.detect() \u65b9\u6cd5\u662f\u7528\u6765\u68c0\u6d4b\u5f53\u524d\u8fd0\u884c\u73af\u5883\uff0c\u6e90\u7801\u5982\u4e0b public static func detect ( arguments : [ String ] = CommandLine . arguments ) throws - Environment { var commandInput = CommandInput ( arguments : arguments ) return try Environment . detect ( from : commandInput ) } \u4ece\u4ee3\u7801\u4e2d\u53ef\u4ee5\u770b\u51fa\uff0c\u6839\u636e env \u53c2\u6570\uff0c\u5148\u521d\u59cb\u5316\u4e86\u65e5\u5fd7\u7cfb\u7edf LoggingSystem \uff0c\u7136\u540e\u521b\u5efa\u4e86 Application \u5b9e\u4f8b\u5bf9\u8c61\uff0c\u6700\u540e\u518d\u8c03\u7528 configure() \u65b9\u6cd5\u6765\u521d\u59cb\u5316\u914d\u7f6e\u3002 configure() \u65b9\u6cd5\u5b9a\u4e49\u5728 configure.swift \u4e2d\uff0c\u6e90\u7801\u5982\u4e0b // Called before your application initializes. public func configure ( _ app : Application ) throws { // Serves files from `Public/` directory // app.middleware.use(FileMiddleware(publicDirectory: app.directory.publicDirectory)) // Configure SQLite database app . databases . use (. sqlite (. file ( db.sqlite )), as : . sqlite ) // Configure migrations app . migrations . add ( CreateTodo ()) try routes ( app ) } \u4ece\u6e90\u7801\u4e2d\u53ef\u89c1\uff0c configure() \u65b9\u6cd5\u5185\u90e8\u6ce8\u518c\u4e86 middleware \uff08\u6bd4\u5982\uff1a FileMiddleware \uff09\u3001\u6570\u636e\u5e93\u76f8\u5173\u7684\u914d\u7f6e\uff0c\u4ee5\u53ca API \u8def\u7531\u7684\u914d\u7f6e\u3002\uff08\u6ce8\uff1a\u8fd9\u91cc\u5c31\u4e0d\u5c55\u5f00\u8ba8\u8bba\u8fd9\u4e9b Vapor \u7ec4\u4ef6\u4e86\uff0c\u6bd4\u5982 Middleware \u7b49\uff0c\u540e\u7eed\u7ae0\u8282\u5c06\u8fdb\u884c\u8be6\u7ec6\u4ecb\u7ecd\u3002\uff09 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u770b\u4e0b routes() \u65b9\u6cd5\u7684\u5b9e\u73b0\uff0c\u5b83\u662f\u5b9a\u4e49\u5728 routes.swift \u6587\u4ef6\u4e2d\uff0c\u6e90\u7801\u5982\u4e0b func routes ( _ app : Application ) throws { app . get { req in return It works! } app . get ( hello ) { req in return Hello, world! } let todoController = TodoController () app . get ( todos , use : todoController . index ) app . post ( todos , use : todoController . create ) app . on (. DELETE , todos , :todoID , use : todoController . delete ) } \u4e4b\u524d\uff0c\u8bbf\u95ee http://127.0.0.1:8080 \u5730\u5740\uff0c\u8fd4\u56de\u4e86 It works! \u6587\u672c\uff0c\u5176\u5b9e\u5bf9\u5e94\u7684\u5c31\u662f\u8fd9\u90e8\u5206\u4ee3\u7801\u3002 app . get { req in return It works! } \u8fd9\u662f\u5728\u6839\u8def\u5f84\u4e0b\uff0c\u76d1\u542c\u4e86 GET \u884c\u4e3a\uff0c\u5f53\u901a\u8fc7 GET \u65b9\u5f0f\u8bf7\u6c42\u6839\u8def\u5f84\uff08\u6bd4\u5982\uff1a http://127.0.0.1:8080 \uff09\u65f6\uff0c\u5c06\u8fd4\u56de\u4e00\u4e32\u6587\u672c It works! \u3002 \u540c\u7406\uff0c\u7b2c\u4e8c\u6bb5\u4ee3\u7801 app . get ( hello ) { req in return Hello, world! } \u76d1\u542c\u4e86\u8def\u5f84\u4e3a hello \u7684 GET \u8bf7\u6c42\uff0c\u5f53\u901a\u8fc7 GET \u65b9\u5f0f\u8bf7\u6c42\u5bf9\u5e94\u8def\u5f84\uff08\u6bd4\u5982\uff1a http://127.0.0.1:8080/hello \uff09\u65f6\uff0c\u5c06\u8fd4\u56de\u4e00\u4e32\u6587\u672c Hello, world! \u3002 \u518d\u770b\u4e0b\u7b2c\u4e09\u6bb5\u4ee3\u7801 let todoController = TodoController () // \u8bf7\u6c42\u8def\u5f84\uff1atodos\uff0c\u8bf7\u6c42\u65b9\u6cd5: GET\uff0c\u54cd\u5e94\u65b9\u6cd5\uff1aindex\u3002 app . get ( todos , use : todoController . index ) // \u8bf7\u6c42\u8def\u5f84\uff1atodos\uff0c\u8bf7\u6c42\u65b9\u6cd5: POST\uff0c\u54cd\u5e94\u65b9\u6cd5\uff1acreate\u3002 app . post ( todos , use : todoController . create ) // \u8bf7\u6c42\u8def\u5f84\uff1atodos\uff0c\u8bf7\u6c42\u65b9\u6cd5: DELETE\uff0c\u54cd\u5e94\u65b9\u6cd5\uff1adelete\u3002 app . on (. DELETE , todos , :todoID , use : todoController . delete ) \u8def\u5f84\u4e3a todos \u7684\u8bf7\u6c42\uff08 GET \u3001 POST \u3001 DELETE \uff09\u90fd\u5c06\u88ab\u6620\u5c04\u5230 TodoController \u4e2d\uff0c\u5728\u8be5 Controller \u4e2d\u53ef\u4ee5\u5904\u7406\u76f8\u5173\u7684\u4e1a\u52a1\u903b\u8f91\u3002 struct TodoController { func index ( req : Request ) throws - EventLoopFuture [ Todo ] { ...... } func create ( req : Request ) throws - EventLoopFuture Todo { ...... } func delete ( req : Request ) throws - EventLoopFuture HTTPStatus { ...... } } \u56de\u5230 main.swift \u6587\u4ef6\uff0c\u5f53 app \u5b9e\u4f8b\u521d\u59cb\u5316\u540e\uff0c\u6700\u540e\u5c06\u6267\u884c run() \u65b9\u6cd5\u6765\u542f\u52a8\u670d\u52a1\u3002 try app . run () run() \u6e90\u7801\u5982\u4e0b public func run () throws { do { try self . start () try self . running ?. onStop . wait () } catch { self . logger . report ( error : error ) throw error } } \u81f3\u6b64\uff0c\u6211\u4eec\u5bf9 Vapor \u9879\u76ee\u542f\u52a8\u7684\u6267\u884c\u8fc7\u7a0b\u6709\u4e86\u5927\u81f4\u7684\u4e86\u89e3\uff0c\u540e\u9762\u5c06\u5177\u4f53\u4ecb\u7ecd Vapor \u7684\u5404\u4e2a\u6a21\u5757\u3002","title":"\u7b80\u6790 Vapor \u542f\u52a8\u8fc7\u7a0b"},{"location":"hello_world/#_4","text":"\u53ef\u53c2\u8003\uff1a ExampleHello","title":"\u793a\u4f8b\u4ee3\u7801"},{"location":"spm/","text":"SPM Swift Package Manager \uff08\u7b80\u79f0\uff1a SPM \uff09\u7528\u4e8e\u6784\u5efa\u9879\u76ee\u6e90\u7801\u4ee5\u53ca\u5404\u79cd\u4f9d\u8d56\u3002\u5b83\u7c7b\u4f3c\u4e8e Cocoapods\u3001Ruby gems\u3001\u548c NPM \u3002\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0cVapor \u5e94\u7528\u76f4\u63a5\u4f7f\u7528 Vapor Toolbox \u5373\u53ef\uff0ctoolbox \u5185\u90e8\u5c06\u4f1a\u4e0e SPM \u8fdb\u884c\u4ea4\u4e92\u3002\u4e0d\u8fc7\uff0c\u7406\u89e3\u57fa\u7840\u6982\u5ff5\u8fd8\u662f\u5f88\u91cd\u8981\u7684\u3002 \u63d0\u793a \u60f3\u4e86\u89e3\u66f4\u591a\u5173\u4e8e SPM \uff0c\u53ef\u8bbf\u95ee Swift.org Package Manifest \u9996\u5148\u770b\u4e0b package \u914d\u7f6e\u6587\u4ef6\u3002\u5b83\u4f4d\u4e8e\u9879\u76ee\u6839\u76ee\u5f55\u4e2d\uff0c\u5e76\u88ab\u547d\u540d\u4e3a Package.swift \u3002 // swift-tools-version:5.2 import PackageDescription let package = Package( name: app , platforms: [ .macOS(.v10_15) ], products: [ .executable(name: Run , targets: [ Run ]), .library(name: App , targets: [ App ]), ], dependencies: [ // \ud83d\udca7 A server-side Swift web framework. .package(url: https://github.com/vapor/vapor.git , from: 4.0.0-rc.1 ), .package(url: https://github.com/vapor/fluent.git , from: 4.0.0-rc.1 ), .package(url: https://github.com/vapor/fluent-sqlite-driver.git , from: 4.0.0-rc.1 ), ], targets: [ .target(name: App , dependencies: [ .product(name: Fluent , package: fluent ), .product(name: FluentSQLiteDriver , package: fluent-sqlite-driver ), .product(name: Vapor , package: vapor ), ]), .target(name: Run , dependencies: [ .target(name: App ), ]), .testTarget(name: AppTests , dependencies: [ .target(name: App ), .product(name: XCTVapor , package: vapor ), ]) ] ) Tools Version \u7b2c\u4e00\u884c\u8868\u793a\u9700\u8981\u4f7f\u7528\u7684 Swift tools \u7248\u672c\u53f7\uff0c\u5b83\u6307\u660e\u4e86 Swift \u7684\u6700\u4f4e\u53ef\u7528\u7248\u672c\u3002 // swift-tools-version:5.2 Package Name name \u5b57\u6bb5\u4ee3\u8868\u5f53\u524d package \u7684\u540d\u5b57\u3002 Platforms platforms \u5b57\u6bb5\u4ee3\u8868\u5f53\u524d\u652f\u6301\u7684\u6700\u4f4e\u7cfb\u7edf\u7248\u672c\u53f7\u3002\u6bd4\u5982\uff0c .macOS(.v10_15) \u8868\u793a\u5f53\u524d\u652f\u6301\u7684\u7cfb\u7edf\u7248\u672c\u53f7\u662f v10.15 \u53ca\u4ee5\u4e0a\u3002 Products products \u5b57\u6bb5\u4ee3\u8868 package \u6784\u5efa\u7684\u65f6\u5019\u8981\u751f\u6210\u7684 targets \u3002\u793a\u4f8b\u4e2d\uff0c\u6709\u4e24\u79cd target\uff0c\u4e00\u4e2a\u662f library\uff0c\u53e6\u4e00\u4e2a\u662f executable \u3002 Dependencies dependencies \u5b57\u6bb5\u4ee3\u8868\u9700\u8981\u4f9d\u8d56\u7684 SPM package\u3002\u6240\u6709 Vapor \u5e94\u7528\u90fd\u4f9d\u8d56\u4e8e Vapor package \uff0c\u4f46\u662f\u4f60\u4e5f\u53ef\u4ee5\u6dfb\u52a0\u5176\u5b83\u60f3\u8981\u7684 dependency \u3002 \u4e0a\u9762\u8fd9\u4e2a\u793a\u4f8b\u53ef\u89c1\uff0c Vapor 4.0 \u6216\u4ee5\u4e0a\u7248\u672c\u662f\u8fd9\u4e2a package \u7684 dependency \u3002\u5f53\u5728 package \u4e2d\u6dfb\u52a0\u4e86 dependency \u540e\uff0c\u63a5\u4e0b\u6765\u4f60\u5fc5\u987b\u8bbe\u7f6e targets \u3002 \u63d0\u793a \u53ea\u8981\u4fee\u6539\u4e86 package manifest\uff0c\u90fd\u9700\u8981\u8c03\u7528 vapor update \u6765\u8ba9\u53d8\u66f4\u5185\u5bb9\u751f\u6548\u3002 Targets Targets \u5305\u542b\u4e86\u6240\u6709\u7684 modules\u3001executables \u4ee5\u53ca tests \u3002 // swift-tools-version:5.2 import PackageDescription let package = Package( ...... targets: [ .target(name: App , dependencies: [ .product(name: Fluent , package: fluent ), .product(name: FluentSQLiteDriver , package: fluent-sqlite-driver ), .product(name: Vapor , package: vapor ), ]), .target(name: Run , dependencies: [ .target(name: App ), ]), .testTarget(name: AppTests , dependencies: [ .target(name: App ), .product(name: XCTVapor , package: vapor ), ]) ] ) \u867d\u7136\u53ef\u4ee5\u6dfb\u52a0\u4efb\u610f\u591a\u7684 targets \u6765\u7ec4\u7ec7\u4ee3\u7801\uff0c\u4f46\u5927\u90e8\u5206 Vapor \u5e94\u7528\u6709 3 \u4e2a target \u5c31\u8db3\u591f\u4e86\u3002\u6bcf\u4e2a target \u58f0\u660e\u4e86\u5b83\u4f9d\u8d56\u7684 module \u3002\u4e3a\u4e86\u5728\u4ee3\u7801\u4e2d\u53ef\u4ee5 import \u8fd9\u4e9b modules \uff0c\u4f60\u5fc5\u987b\u6dfb\u52a0 module \u540d\u5b57\u3002\u4e00\u4e2a target \u53ef\u4ee5\u4f9d\u8d56\u4e8e\u5de5\u7a0b\u4e2d\u5176\u5b83\u7684 target \u6216\u8005\u66b4\u9732\u51fa\u6765\u7684 modules \u3002 \u63d0\u793a Executable targets (\u5305\u542b main.swift \u6587\u4ef6\u7684 target) \u4e0d\u80fd\u88ab\u5176\u5b83 modules \u5bfc\u5165\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48 Vapor \u4f1a\u6709 App \u548c Run \u4e24\u79cd target\u3002\u4efb\u4f55\u5305\u542b\u5728 App \u4e2d\u7684\u4ee3\u7801\u90fd\u53ef\u4ee5\u5728 AppTests \u4e2d\u88ab\u6d4b\u8bd5\u9a8c\u8bc1\u3002 \u76ee\u5f55\u7ed3\u6784 \u4ee5\u4e0b\u662f\u5178\u578b\u7684 SPM package \u76ee\u5f55\u7ed3\u6784\u3002 . \u251c\u2500\u2500 Sources \u2502 \u251c\u2500\u2500 App \u2502 \u2502 \u2514\u2500\u2500 (Source code) \u2502 \u2514\u2500\u2500 Run \u2502 \u2514\u2500\u2500 main.swift \u251c\u2500\u2500 Tests \u2502 \u2514\u2500\u2500 AppTests \u2514\u2500\u2500 Package.swift \u6bcf\u4e2a .target \u5bf9\u5e94 Sources \u4e2d\u7684\u4e00\u4e2a\u6587\u4ef6\u5939\u3002\u6bcf\u4e2a .testTarget \u5bf9\u5e94 Tests \u4e2d\u7684\u4e00\u4e2a\u6587\u4ef6\u5939\u3002 Package.resolved \u7b2c\u4e00\u6b21\u6784\u5efa\u6210\u529f\u540e\uff0c SPM \u5c06\u4f1a\u81ea\u52a8\u521b\u5efa\u4e00\u4e2a Package.resolved \u6587\u4ef6\u3002 Package.resolved \u4fdd\u5b58\u4e86\u5f53\u524d\u9879\u76ee\u6240\u6709\u7528\u5230\u7684 dependency \u7248\u672c\u3002 Package.resolved \u793a\u4f8b\u5982\u4e0b\uff1a { object : { pins : [ { package : async-http-client , repositoryURL : https://github.com/swift-server/async-http-client.git , state : { branch : null, revision : 51dc885a30ca704b02fa803099b0a9b5b38067b6 , version : 1.0.0 } }, { package : async-kit , repositoryURL : https://github.com/vapor/async-kit.git , state : { branch : null, revision : d9fd2be441af6d1428b62ab694848396e7072a14 , version : 1.0.0-beta.1 } }, ...... ] }, version : 1 } \u9047\u5230\u95ee\u9898 \u5982\u679c\u4f60\u9047\u5230 SPM \u76f8\u5173\u7684\u95ee\u9898\uff0c\u53ef\u4ee5\u5c1d\u8bd5 clean \u4e0b\u5de5\u7a0b\u9879\u76ee\u8bd5\u8bd5\u3002 vapor clean","title":"SPM"},{"location":"spm/#spm","text":"Swift Package Manager \uff08\u7b80\u79f0\uff1a SPM \uff09\u7528\u4e8e\u6784\u5efa\u9879\u76ee\u6e90\u7801\u4ee5\u53ca\u5404\u79cd\u4f9d\u8d56\u3002\u5b83\u7c7b\u4f3c\u4e8e Cocoapods\u3001Ruby gems\u3001\u548c NPM \u3002\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0cVapor \u5e94\u7528\u76f4\u63a5\u4f7f\u7528 Vapor Toolbox \u5373\u53ef\uff0ctoolbox \u5185\u90e8\u5c06\u4f1a\u4e0e SPM \u8fdb\u884c\u4ea4\u4e92\u3002\u4e0d\u8fc7\uff0c\u7406\u89e3\u57fa\u7840\u6982\u5ff5\u8fd8\u662f\u5f88\u91cd\u8981\u7684\u3002 \u63d0\u793a \u60f3\u4e86\u89e3\u66f4\u591a\u5173\u4e8e SPM \uff0c\u53ef\u8bbf\u95ee Swift.org","title":"SPM"},{"location":"spm/#package-manifest","text":"\u9996\u5148\u770b\u4e0b package \u914d\u7f6e\u6587\u4ef6\u3002\u5b83\u4f4d\u4e8e\u9879\u76ee\u6839\u76ee\u5f55\u4e2d\uff0c\u5e76\u88ab\u547d\u540d\u4e3a Package.swift \u3002 // swift-tools-version:5.2 import PackageDescription let package = Package( name: app , platforms: [ .macOS(.v10_15) ], products: [ .executable(name: Run , targets: [ Run ]), .library(name: App , targets: [ App ]), ], dependencies: [ // \ud83d\udca7 A server-side Swift web framework. .package(url: https://github.com/vapor/vapor.git , from: 4.0.0-rc.1 ), .package(url: https://github.com/vapor/fluent.git , from: 4.0.0-rc.1 ), .package(url: https://github.com/vapor/fluent-sqlite-driver.git , from: 4.0.0-rc.1 ), ], targets: [ .target(name: App , dependencies: [ .product(name: Fluent , package: fluent ), .product(name: FluentSQLiteDriver , package: fluent-sqlite-driver ), .product(name: Vapor , package: vapor ), ]), .target(name: Run , dependencies: [ .target(name: App ), ]), .testTarget(name: AppTests , dependencies: [ .target(name: App ), .product(name: XCTVapor , package: vapor ), ]) ] )","title":"Package Manifest"},{"location":"spm/#tools-version","text":"\u7b2c\u4e00\u884c\u8868\u793a\u9700\u8981\u4f7f\u7528\u7684 Swift tools \u7248\u672c\u53f7\uff0c\u5b83\u6307\u660e\u4e86 Swift \u7684\u6700\u4f4e\u53ef\u7528\u7248\u672c\u3002 // swift-tools-version:5.2","title":"Tools Version"},{"location":"spm/#package-name","text":"name \u5b57\u6bb5\u4ee3\u8868\u5f53\u524d package \u7684\u540d\u5b57\u3002","title":"Package Name"},{"location":"spm/#platforms","text":"platforms \u5b57\u6bb5\u4ee3\u8868\u5f53\u524d\u652f\u6301\u7684\u6700\u4f4e\u7cfb\u7edf\u7248\u672c\u53f7\u3002\u6bd4\u5982\uff0c .macOS(.v10_15) \u8868\u793a\u5f53\u524d\u652f\u6301\u7684\u7cfb\u7edf\u7248\u672c\u53f7\u662f v10.15 \u53ca\u4ee5\u4e0a\u3002","title":"Platforms"},{"location":"spm/#products","text":"products \u5b57\u6bb5\u4ee3\u8868 package \u6784\u5efa\u7684\u65f6\u5019\u8981\u751f\u6210\u7684 targets \u3002\u793a\u4f8b\u4e2d\uff0c\u6709\u4e24\u79cd target\uff0c\u4e00\u4e2a\u662f library\uff0c\u53e6\u4e00\u4e2a\u662f executable \u3002","title":"Products"},{"location":"spm/#dependencies","text":"dependencies \u5b57\u6bb5\u4ee3\u8868\u9700\u8981\u4f9d\u8d56\u7684 SPM package\u3002\u6240\u6709 Vapor \u5e94\u7528\u90fd\u4f9d\u8d56\u4e8e Vapor package \uff0c\u4f46\u662f\u4f60\u4e5f\u53ef\u4ee5\u6dfb\u52a0\u5176\u5b83\u60f3\u8981\u7684 dependency \u3002 \u4e0a\u9762\u8fd9\u4e2a\u793a\u4f8b\u53ef\u89c1\uff0c Vapor 4.0 \u6216\u4ee5\u4e0a\u7248\u672c\u662f\u8fd9\u4e2a package \u7684 dependency \u3002\u5f53\u5728 package \u4e2d\u6dfb\u52a0\u4e86 dependency \u540e\uff0c\u63a5\u4e0b\u6765\u4f60\u5fc5\u987b\u8bbe\u7f6e targets \u3002 \u63d0\u793a \u53ea\u8981\u4fee\u6539\u4e86 package manifest\uff0c\u90fd\u9700\u8981\u8c03\u7528 vapor update \u6765\u8ba9\u53d8\u66f4\u5185\u5bb9\u751f\u6548\u3002","title":"Dependencies"},{"location":"spm/#targets","text":"Targets \u5305\u542b\u4e86\u6240\u6709\u7684 modules\u3001executables \u4ee5\u53ca tests \u3002 // swift-tools-version:5.2 import PackageDescription let package = Package( ...... targets: [ .target(name: App , dependencies: [ .product(name: Fluent , package: fluent ), .product(name: FluentSQLiteDriver , package: fluent-sqlite-driver ), .product(name: Vapor , package: vapor ), ]), .target(name: Run , dependencies: [ .target(name: App ), ]), .testTarget(name: AppTests , dependencies: [ .target(name: App ), .product(name: XCTVapor , package: vapor ), ]) ] ) \u867d\u7136\u53ef\u4ee5\u6dfb\u52a0\u4efb\u610f\u591a\u7684 targets \u6765\u7ec4\u7ec7\u4ee3\u7801\uff0c\u4f46\u5927\u90e8\u5206 Vapor \u5e94\u7528\u6709 3 \u4e2a target \u5c31\u8db3\u591f\u4e86\u3002\u6bcf\u4e2a target \u58f0\u660e\u4e86\u5b83\u4f9d\u8d56\u7684 module \u3002\u4e3a\u4e86\u5728\u4ee3\u7801\u4e2d\u53ef\u4ee5 import \u8fd9\u4e9b modules \uff0c\u4f60\u5fc5\u987b\u6dfb\u52a0 module \u540d\u5b57\u3002\u4e00\u4e2a target \u53ef\u4ee5\u4f9d\u8d56\u4e8e\u5de5\u7a0b\u4e2d\u5176\u5b83\u7684 target \u6216\u8005\u66b4\u9732\u51fa\u6765\u7684 modules \u3002 \u63d0\u793a Executable targets (\u5305\u542b main.swift \u6587\u4ef6\u7684 target) \u4e0d\u80fd\u88ab\u5176\u5b83 modules \u5bfc\u5165\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48 Vapor \u4f1a\u6709 App \u548c Run \u4e24\u79cd target\u3002\u4efb\u4f55\u5305\u542b\u5728 App \u4e2d\u7684\u4ee3\u7801\u90fd\u53ef\u4ee5\u5728 AppTests \u4e2d\u88ab\u6d4b\u8bd5\u9a8c\u8bc1\u3002","title":"Targets"},{"location":"spm/#_1","text":"\u4ee5\u4e0b\u662f\u5178\u578b\u7684 SPM package \u76ee\u5f55\u7ed3\u6784\u3002 . \u251c\u2500\u2500 Sources \u2502 \u251c\u2500\u2500 App \u2502 \u2502 \u2514\u2500\u2500 (Source code) \u2502 \u2514\u2500\u2500 Run \u2502 \u2514\u2500\u2500 main.swift \u251c\u2500\u2500 Tests \u2502 \u2514\u2500\u2500 AppTests \u2514\u2500\u2500 Package.swift \u6bcf\u4e2a .target \u5bf9\u5e94 Sources \u4e2d\u7684\u4e00\u4e2a\u6587\u4ef6\u5939\u3002\u6bcf\u4e2a .testTarget \u5bf9\u5e94 Tests \u4e2d\u7684\u4e00\u4e2a\u6587\u4ef6\u5939\u3002","title":"\u76ee\u5f55\u7ed3\u6784"},{"location":"spm/#packageresolved","text":"\u7b2c\u4e00\u6b21\u6784\u5efa\u6210\u529f\u540e\uff0c SPM \u5c06\u4f1a\u81ea\u52a8\u521b\u5efa\u4e00\u4e2a Package.resolved \u6587\u4ef6\u3002 Package.resolved \u4fdd\u5b58\u4e86\u5f53\u524d\u9879\u76ee\u6240\u6709\u7528\u5230\u7684 dependency \u7248\u672c\u3002 Package.resolved \u793a\u4f8b\u5982\u4e0b\uff1a { object : { pins : [ { package : async-http-client , repositoryURL : https://github.com/swift-server/async-http-client.git , state : { branch : null, revision : 51dc885a30ca704b02fa803099b0a9b5b38067b6 , version : 1.0.0 } }, { package : async-kit , repositoryURL : https://github.com/vapor/async-kit.git , state : { branch : null, revision : d9fd2be441af6d1428b62ab694848396e7072a14 , version : 1.0.0-beta.1 } }, ...... ] }, version : 1 }","title":"Package.resolved"},{"location":"spm/#_2","text":"\u5982\u679c\u4f60\u9047\u5230 SPM \u76f8\u5173\u7684\u95ee\u9898\uff0c\u53ef\u4ee5\u5c1d\u8bd5 clean \u4e0b\u5de5\u7a0b\u9879\u76ee\u8bd5\u8bd5\u3002 vapor clean","title":"\u9047\u5230\u95ee\u9898"},{"location":"test/","text":"\u6d4b\u8bd5 Vapor \u5305\u542b\u4e86\u4e00\u4e2a\u6d4b\u8bd5\u6a21\u5757 XCTVapor \uff0c\u8be5\u6d4b\u8bd5\u6a21\u5757\u662f\u57fa\u4e8e XCTest \u6784\u5efa\u7684\uff0c\u53ef\u7528\u4e8e\u6a21\u62df HTTP \u8bf7\u6c42\u8fdb\u884c\u6d4b\u8bd5\u3002 \u5f00\u59cb \u7f16\u8f91 Package.swift \u6587\u4ef6\u3002 let package = Package ( ...... dependencies : [ . package ( url : https://github.com/vapor/vapor.git , from : 4.0.0 ) ], targets : [ ...... . testTarget ( name : AppTests , dependencies : [ . target ( name : App ), . product ( name : XCTVapor , package : vapor ), ]) ] ) \u6240\u6709\u6d4b\u8bd5\u7528\u4f8b\u5747\u5b58\u653e\u4e8e Tests - AppTest \u76ee\u5f55\u4e2d\uff0c\u9ed8\u8ba4\u4f1a\u751f\u6210 AppTests.swift \u6587\u4ef6\u3002 \u5bfc\u5165 XCTVapor \u6a21\u5757\uff0c\u7136\u540e\u521b\u5efa\u4e00\u4e2a\u7ee7\u627f\u4e8e XCTestCase \u7684 class \uff08\u8fd9\u91cc\u547d\u540d\u4e3a AppTests \uff09\u3002 import XCTVapor final class AppTests : XCTestCase { func testStub () throws { } } \u6bcf\u4e2a function \u9700\u8981\u4ee5 test \u4f5c\u4e3a\u524d\u7f00\u6765\u547d\u540d\uff0c\u8fd9\u6837\u6267\u884c\u6d4b\u8bd5\u7684\u65f6\u5019\u4f1a\u81ea\u52a8\u8986\u76d6\u5230\u8fd9\u4e9b function \u3002 \u6267\u884c\u6d4b\u8bd5 \u5728 Xcode \u4e2d\uff0c\u8f93\u5165\u5feb\u6377\u952e cmd+u \u5373\u53ef\u3002 \u547d\u4ee4\u884c\u754c\u9762\u4e2d\uff0c\u6267\u884c swift test --enable-test-discovery \u547d\u4ee4\u5373\u53ef\u3002 \u793a\u4f8b \u521d\u59cb\u5316\u4e00\u4e2a .testing \u6d4b\u8bd5\u73af\u5883\u7684 Application \u5b9e\u4f8b\uff0c\u5e76\u901a\u8fc7\u8c03\u7528 configure \u65b9\u6cd5\u8fdb\u884c\u76f8\u5173\u914d\u7f6e\u3002 let app = Application (. testing ) defer { app . shutdown () } try configure ( app ) \u6a21\u62df\u4e00\u4e2a HTTP \u8bf7\u6c42\u6d4b\u8bd5 hello \u63a5\u53e3\u3002 hello \u63a5\u53e3\u5b9a\u4e49\u5982\u4e0b\uff1a app . get ( hello ) { req in return Hello, world! } \u6d4b\u8bd5\u4ee3\u7801\u5982\u4e0b\uff1a try app . test (. GET , hello ) { res in XCTAssertEqual ( res . status , . ok ) XCTAssertEqual ( res . body . string , Hello, world! ) } \u7b2c\u4e00\u4e2a\u53c2\u6570\u8868\u793a HTTP Method\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u8868\u793a API \u8bf7\u6c42\u8def\u5f84\uff0c\u7ed3\u5c3e\u95ed\u5305\u4e2d\u662f\u5bf9 response \u7684\u5904\u7406\uff0c\u5e76\u901a\u8fc7 XCTAssert \u65b9\u6cd5\u8fdb\u884c\u9a8c\u8bc1\u3002 \u5bf9\u4e8e\u66f4\u590d\u6742\u7684 request \uff0c\u53ef\u4ee5\u901a\u8fc7 beforeRequest \u95ed\u5305\u6765\u4fee\u6539 header \u548c body \u5185\u5bb9\u3002 response \u4e5f\u6709\u7c7b\u4f3c\u7684\u64cd\u4f5c\u3002 \u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a try app . test (. GET , todos ) { res in XCTAssertContent ([ Todo ]. self , res ) { XCTAssertEqual ( $0 . count , 0 ) } }. test (. POST , todos , beforeRequest : { req in try req . content . encode ( Todo ( title : Test My App )) }, afterResponse : { res in XCTAssertContent ( Todo . self , res ) { XCTAssertNotNil ( $0 . id ) XCTAssertEqual ( $0 . title , Test My App ) } }). test (. GET , todos ) { res in XCTAssertContent ([ Todo ]. self , res ) { XCTAssertEqual ( $0 . count , 1 ) } } \u8865\u5145 Vapor testing API \u652f\u6301\u4e24\u79cd\u65b9\u5f0f\u53d1\u9001\u7528\u4e8e\u6d4b\u8bd5\u7684 request \uff0c\u4e00\u79cd\u662f\u901a\u8fc7\u5185\u90e8\u6a21\u62df\u76f4\u63a5\u54cd\u5e94 respond \uff0c\u53e6\u4e00\u79cd\u662f\u901a\u8fc7\u4e00\u4e2a HTTP Server \u6765\u6d4b\u8bd5\u3002 app . testable ( method : . inMemory ). test (...) // Run tests through a live HTTP server. app . testable ( method : . running ). test (...) \u9ed8\u8ba4\u662f inMemory \u65b9\u5f0f\uff0c running \u65b9\u5f0f\u9ed8\u8ba4\u4f7f\u7528\u7684\u662f 8080 \u7aef\u53e3\uff0c\u4e0d\u8fc7\u4e5f\u652f\u6301\u6307\u5b9a\u7279\u5b9a\u7aef\u53e3\u53f7\u3002 .running(port: 8090)","title":"\u6d4b\u8bd5"},{"location":"test/#_1","text":"Vapor \u5305\u542b\u4e86\u4e00\u4e2a\u6d4b\u8bd5\u6a21\u5757 XCTVapor \uff0c\u8be5\u6d4b\u8bd5\u6a21\u5757\u662f\u57fa\u4e8e XCTest \u6784\u5efa\u7684\uff0c\u53ef\u7528\u4e8e\u6a21\u62df HTTP \u8bf7\u6c42\u8fdb\u884c\u6d4b\u8bd5\u3002","title":"\u6d4b\u8bd5"},{"location":"test/#_2","text":"\u7f16\u8f91 Package.swift \u6587\u4ef6\u3002 let package = Package ( ...... dependencies : [ . package ( url : https://github.com/vapor/vapor.git , from : 4.0.0 ) ], targets : [ ...... . testTarget ( name : AppTests , dependencies : [ . target ( name : App ), . product ( name : XCTVapor , package : vapor ), ]) ] ) \u6240\u6709\u6d4b\u8bd5\u7528\u4f8b\u5747\u5b58\u653e\u4e8e Tests - AppTest \u76ee\u5f55\u4e2d\uff0c\u9ed8\u8ba4\u4f1a\u751f\u6210 AppTests.swift \u6587\u4ef6\u3002 \u5bfc\u5165 XCTVapor \u6a21\u5757\uff0c\u7136\u540e\u521b\u5efa\u4e00\u4e2a\u7ee7\u627f\u4e8e XCTestCase \u7684 class \uff08\u8fd9\u91cc\u547d\u540d\u4e3a AppTests \uff09\u3002 import XCTVapor final class AppTests : XCTestCase { func testStub () throws { } } \u6bcf\u4e2a function \u9700\u8981\u4ee5 test \u4f5c\u4e3a\u524d\u7f00\u6765\u547d\u540d\uff0c\u8fd9\u6837\u6267\u884c\u6d4b\u8bd5\u7684\u65f6\u5019\u4f1a\u81ea\u52a8\u8986\u76d6\u5230\u8fd9\u4e9b function \u3002","title":"\u5f00\u59cb"},{"location":"test/#_3","text":"\u5728 Xcode \u4e2d\uff0c\u8f93\u5165\u5feb\u6377\u952e cmd+u \u5373\u53ef\u3002 \u547d\u4ee4\u884c\u754c\u9762\u4e2d\uff0c\u6267\u884c swift test --enable-test-discovery \u547d\u4ee4\u5373\u53ef\u3002","title":"\u6267\u884c\u6d4b\u8bd5"},{"location":"test/#_4","text":"\u521d\u59cb\u5316\u4e00\u4e2a .testing \u6d4b\u8bd5\u73af\u5883\u7684 Application \u5b9e\u4f8b\uff0c\u5e76\u901a\u8fc7\u8c03\u7528 configure \u65b9\u6cd5\u8fdb\u884c\u76f8\u5173\u914d\u7f6e\u3002 let app = Application (. testing ) defer { app . shutdown () } try configure ( app ) \u6a21\u62df\u4e00\u4e2a HTTP \u8bf7\u6c42\u6d4b\u8bd5 hello \u63a5\u53e3\u3002 hello \u63a5\u53e3\u5b9a\u4e49\u5982\u4e0b\uff1a app . get ( hello ) { req in return Hello, world! } \u6d4b\u8bd5\u4ee3\u7801\u5982\u4e0b\uff1a try app . test (. GET , hello ) { res in XCTAssertEqual ( res . status , . ok ) XCTAssertEqual ( res . body . string , Hello, world! ) } \u7b2c\u4e00\u4e2a\u53c2\u6570\u8868\u793a HTTP Method\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u8868\u793a API \u8bf7\u6c42\u8def\u5f84\uff0c\u7ed3\u5c3e\u95ed\u5305\u4e2d\u662f\u5bf9 response \u7684\u5904\u7406\uff0c\u5e76\u901a\u8fc7 XCTAssert \u65b9\u6cd5\u8fdb\u884c\u9a8c\u8bc1\u3002 \u5bf9\u4e8e\u66f4\u590d\u6742\u7684 request \uff0c\u53ef\u4ee5\u901a\u8fc7 beforeRequest \u95ed\u5305\u6765\u4fee\u6539 header \u548c body \u5185\u5bb9\u3002 response \u4e5f\u6709\u7c7b\u4f3c\u7684\u64cd\u4f5c\u3002 \u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a try app . test (. GET , todos ) { res in XCTAssertContent ([ Todo ]. self , res ) { XCTAssertEqual ( $0 . count , 0 ) } }. test (. POST , todos , beforeRequest : { req in try req . content . encode ( Todo ( title : Test My App )) }, afterResponse : { res in XCTAssertContent ( Todo . self , res ) { XCTAssertNotNil ( $0 . id ) XCTAssertEqual ( $0 . title , Test My App ) } }). test (. GET , todos ) { res in XCTAssertContent ([ Todo ]. self , res ) { XCTAssertEqual ( $0 . count , 1 ) } }","title":"\u793a\u4f8b"},{"location":"test/#_5","text":"Vapor testing API \u652f\u6301\u4e24\u79cd\u65b9\u5f0f\u53d1\u9001\u7528\u4e8e\u6d4b\u8bd5\u7684 request \uff0c\u4e00\u79cd\u662f\u901a\u8fc7\u5185\u90e8\u6a21\u62df\u76f4\u63a5\u54cd\u5e94 respond \uff0c\u53e6\u4e00\u79cd\u662f\u901a\u8fc7\u4e00\u4e2a HTTP Server \u6765\u6d4b\u8bd5\u3002 app . testable ( method : . inMemory ). test (...) // Run tests through a live HTTP server. app . testable ( method : . running ). test (...) \u9ed8\u8ba4\u662f inMemory \u65b9\u5f0f\uff0c running \u65b9\u5f0f\u9ed8\u8ba4\u4f7f\u7528\u7684\u662f 8080 \u7aef\u53e3\uff0c\u4e0d\u8fc7\u4e5f\u652f\u6301\u6307\u5b9a\u7279\u5b9a\u7aef\u53e3\u53f7\u3002 .running(port: 8090)","title":"\u8865\u5145"},{"location":"toolbox/","text":"Toolbox TODO","title":"Toolbox"},{"location":"toolbox/#toolbox","text":"TODO","title":"Toolbox"},{"location":"base/application/","text":"Application Application \u662f Vapor \u4e2d\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u7c7b\uff0c\u8d1f\u8d23\u7ba1\u7406\u5404\u7c7b\u57fa\u7840\u7ec4\u4ef6\uff08\u6bd4\u5982\uff1aProvider\u3001Middleware\u3001Database\u3001Route \u7b49\u7b49\uff09\u3002 Application \u7684\u90e8\u5206\u6e90\u7801\u5982\u4e0b public final class Application { public var environment : Environment public let eventLoopGroupProvider : EventLoopGroupProvider public let eventLoopGroup : EventLoopGroup public var storage : Storage public private ( set ) var didShutdown : Bool public var logger : Logger private var isBooted : Bool public init ( _ environment : Environment = . development , _ eventLoopGroupProvider : EventLoopGroupProvider = . createNew ) { Backtrace . install () self . environment = environment self . eventLoopGroupProvider = eventLoopGroupProvider switch eventLoopGroupProvider { case . shared ( let group ): self . eventLoopGroup = group case . createNew : self . eventLoopGroup = MultiThreadedEventLoopGroup ( numberOfThreads : System . coreCount ) } self . locks = . init () self . didShutdown = false self . logger = . init ( label : codes.vapor.application ) self . storage = . init ( logger : self . logger ) self . lifecycle = . init () self . isBooted = false self . core . initialize () self . views . initialize () self . sessions . initialize () self . sessions . use (. memory ) self . responder . initialize () self . responder . use (. default ) self . commands . use ( self . server . command , as : serve , isDefault : true ) self . commands . use ( RoutesCommand (), as : routes ) // Load specific .env first since values are not overridden. self . loadDotEnv ( named : .env. \\( self . environment . name ) ) self . loadDotEnv ( named : .env ) } ...... } extension Application : RoutesBuilder { public func add ( _ route : Route ) { self . routes . add ( route ) } } \u5176\u4e2d environment \uff1a\u4e3b\u8981\u7528\u4e8e\u5b58\u653e\u7a0b\u5e8f\u5f53\u524d\u8fd0\u884c\u73af\u5883\u76f8\u5173\u7684\u6570\u636e\u3002 routes \uff1a\u4e3b\u8981\u7528\u4e8e\u7ba1\u7406 API \u8def\u7531\u3002 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u6765\u770b\u4e0b Run \u76ee\u5f55\u4e2d\u7684 main.swift \u6587\u4ef6\u3002 var env = try Environment . detect () try LoggingSystem . bootstrap ( from : env ) let app = Application ( env ) defer { app . shutdown () } try configure ( app ) try app . run () \u8fd8\u6709 configure.swift \u6587\u4ef6\u3002 // Called before your application initializes. public func configure ( _ app : Application ) throws { // Serves files from `Public/` directory // app.middleware.use(FileMiddleware(publicDirectory: app.directory.publicDirectory)) // Configure SQLite database app . databases . use (. sqlite (. file ( db.sqlite )), as : . sqlite ) // Configure migrations app . migrations . add ( CreateTodo ()) try routes ( app ) } \u6700\u540e\u662f routes.swift \u6587\u4ef6\u3002 func routes ( _ app : Application ) throws { app . get { req in return It works! } app . get ( hello ) { req in return Hello, world! } let todoController = TodoController () app . get ( todos , use : todoController . index ) app . post ( todos , use : todoController . create ) app . on (. DELETE , todos , :todoID , use : todoController . delete ) } \u4ece\u4e2d\u53ef\u4ee5\u770b\u51fa\uff0c Application \u7ba1\u7406\u7740\u5404\u7c7b\u57fa\u7840\u7ec4\u4ef6\uff08\u6bd4\u5982\uff1aEnvironment\u3001Logger\u3001Route \u7b49\u7b49\uff09\uff0c\u5e76\u8d2f\u7a7f\u4e8e\u7a0b\u5e8f\u7684\u6574\u4e2a\u751f\u547d\u5468\u671f\u3002","title":"Application"},{"location":"base/application/#application","text":"Application \u662f Vapor \u4e2d\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u7c7b\uff0c\u8d1f\u8d23\u7ba1\u7406\u5404\u7c7b\u57fa\u7840\u7ec4\u4ef6\uff08\u6bd4\u5982\uff1aProvider\u3001Middleware\u3001Database\u3001Route \u7b49\u7b49\uff09\u3002 Application \u7684\u90e8\u5206\u6e90\u7801\u5982\u4e0b public final class Application { public var environment : Environment public let eventLoopGroupProvider : EventLoopGroupProvider public let eventLoopGroup : EventLoopGroup public var storage : Storage public private ( set ) var didShutdown : Bool public var logger : Logger private var isBooted : Bool public init ( _ environment : Environment = . development , _ eventLoopGroupProvider : EventLoopGroupProvider = . createNew ) { Backtrace . install () self . environment = environment self . eventLoopGroupProvider = eventLoopGroupProvider switch eventLoopGroupProvider { case . shared ( let group ): self . eventLoopGroup = group case . createNew : self . eventLoopGroup = MultiThreadedEventLoopGroup ( numberOfThreads : System . coreCount ) } self . locks = . init () self . didShutdown = false self . logger = . init ( label : codes.vapor.application ) self . storage = . init ( logger : self . logger ) self . lifecycle = . init () self . isBooted = false self . core . initialize () self . views . initialize () self . sessions . initialize () self . sessions . use (. memory ) self . responder . initialize () self . responder . use (. default ) self . commands . use ( self . server . command , as : serve , isDefault : true ) self . commands . use ( RoutesCommand (), as : routes ) // Load specific .env first since values are not overridden. self . loadDotEnv ( named : .env. \\( self . environment . name ) ) self . loadDotEnv ( named : .env ) } ...... } extension Application : RoutesBuilder { public func add ( _ route : Route ) { self . routes . add ( route ) } } \u5176\u4e2d environment \uff1a\u4e3b\u8981\u7528\u4e8e\u5b58\u653e\u7a0b\u5e8f\u5f53\u524d\u8fd0\u884c\u73af\u5883\u76f8\u5173\u7684\u6570\u636e\u3002 routes \uff1a\u4e3b\u8981\u7528\u4e8e\u7ba1\u7406 API \u8def\u7531\u3002 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u6765\u770b\u4e0b Run \u76ee\u5f55\u4e2d\u7684 main.swift \u6587\u4ef6\u3002 var env = try Environment . detect () try LoggingSystem . bootstrap ( from : env ) let app = Application ( env ) defer { app . shutdown () } try configure ( app ) try app . run () \u8fd8\u6709 configure.swift \u6587\u4ef6\u3002 // Called before your application initializes. public func configure ( _ app : Application ) throws { // Serves files from `Public/` directory // app.middleware.use(FileMiddleware(publicDirectory: app.directory.publicDirectory)) // Configure SQLite database app . databases . use (. sqlite (. file ( db.sqlite )), as : . sqlite ) // Configure migrations app . migrations . add ( CreateTodo ()) try routes ( app ) } \u6700\u540e\u662f routes.swift \u6587\u4ef6\u3002 func routes ( _ app : Application ) throws { app . get { req in return It works! } app . get ( hello ) { req in return Hello, world! } let todoController = TodoController () app . get ( todos , use : todoController . index ) app . post ( todos , use : todoController . create ) app . on (. DELETE , todos , :todoID , use : todoController . delete ) } \u4ece\u4e2d\u53ef\u4ee5\u770b\u51fa\uff0c Application \u7ba1\u7406\u7740\u5404\u7c7b\u57fa\u7840\u7ec4\u4ef6\uff08\u6bd4\u5982\uff1aEnvironment\u3001Logger\u3001Route \u7b49\u7b49\uff09\uff0c\u5e76\u8d2f\u7a7f\u4e8e\u7a0b\u5e8f\u7684\u6574\u4e2a\u751f\u547d\u5468\u671f\u3002","title":"Application"},{"location":"base/controller/","text":"Controller Controller \u53ef\u4ee5\u4f7f\u5f97\u4ee3\u7801\u7ed3\u6784\u66f4\u6e05\u6670\uff0c\u5b83\u662f\u5904\u7406 request \u548c response \u7684\u4e00\u7cfb\u5217\u65b9\u6cd5\u96c6\u5408\u3002 \u521b\u5efa Controller \u9996\u5148\uff0c\u6211\u4eec\u5728 Controllers \u76ee\u5f55\u4e0b\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 TestController.swift \u6587\u4ef6 \uff0c\u4ee3\u7801\u5982\u4e0b import Vapor struct TestController { func createUser ( req : Request ) - String { return Create SwiftMic test user } func updateUser ( req : Request ) - String { return Update SwiftMic test user } func findUser ( req : Request ) - String { let userId = req . parameters . get ( userId ) if nil == userId || userId !. isEmpty { return Require param: userId } return Find SwiftMic test user: + userId ! } func deleteUser ( req : Request ) - String { let userId = req . parameters . get ( userId ) if nil == userId || userId !. isEmpty { return Require param: userId } return Delete SwiftMic test user: + userId ! } } \u6b64\u5904\uff0c TestController \u7ed3\u6784\u4f53\u4e2d\u5b9a\u4e49\u4e86 4 \u4e2a\u65b9\u6cd5\uff08 createUser \u3001 updateUser \u3001 findUser \u3001 deleteUser \uff09\uff0c\u5b83\u4eec\u90fd\u63a5\u6536\u4e86\u4e00\u4e2a Request \u8bf7\u6c42\uff0c\u5904\u7406\u5b8c\u540e\u8fd4\u56de\u4e00\u4e2a Response \uff08\u6b64\u5904\u4e3a String \u7c7b\u578b\uff09\u3002 \u7ed1\u5b9a Controller \u63a5\u4e0b\u6765\uff0c\u5728 routes.swift \u6587\u4ef6\u4e2d\u8fdb\u884c\u7ed1\u5b9a\u64cd\u4f5c\u3002 func routes ( _ app : Application ) throws { ...... let testController = TestController () // \u8bf7\u6c42\u8def\u5f84\uff1atest\uff0c\u8bf7\u6c42\u65b9\u6cd5: POST\uff0c\u54cd\u5e94\u65b9\u6cd5\uff1acreateUser\u3002 app . post ( test , use : testController . createUser ) // \u8bf7\u6c42\u8def\u5f84\uff1atest\uff0c\u8bf7\u6c42\u65b9\u6cd5: PUT\uff0c\u54cd\u5e94\u65b9\u6cd5\uff1aupdateUser\u3002 app . put ( test , use : testController . updateUser ) // \u8bf7\u6c42\u8def\u5f84\uff1atest\uff0c\u53c2\u6570\uff1a userId , \u8bf7\u6c42\u65b9\u6cd5: GET\uff0c\u54cd\u5e94\u65b9\u6cd5\uff1afindUser\u3002 app . get ( test , :userId , use : testController . findUser ) // \u8bf7\u6c42\u8def\u5f84\uff1atest\uff0c\u53c2\u6570\uff1a userId , \u8bf7\u6c42\u65b9\u6cd5: DELETE\uff0c\u54cd\u5e94\u65b9\u6cd5\uff1adeleteUser\u3002 app . delete ( test , :userId , use : testController . deleteUser ) } \u6d4b\u8bd5 API \u6700\u540e\uff0c\u901a\u8fc7 CURL \u5de5\u5177\u6a21\u62df HTTP \u8bf7\u6c42\u6765\u6d4b\u8bd5\u4e0b\u8fd9 4 \u4e2a\u63a5\u53e3\u3002 GET Request curl -X GET http://localhost:8080/test/1 Response Find SwiftMic test user: 1 POST Request curl -X POST http://localhost:8080/test Response Create SwiftMic test user PUT Request curl -X PUT http://localhost:8080/test Response Update SwiftMic test user DELETE Request curl -X DELETE http://localhost:8080/test/1 Response Delete SwiftMic test user: 1","title":"Controller"},{"location":"base/controller/#controller","text":"Controller \u53ef\u4ee5\u4f7f\u5f97\u4ee3\u7801\u7ed3\u6784\u66f4\u6e05\u6670\uff0c\u5b83\u662f\u5904\u7406 request \u548c response \u7684\u4e00\u7cfb\u5217\u65b9\u6cd5\u96c6\u5408\u3002","title":"Controller"},{"location":"base/controller/#controller_1","text":"\u9996\u5148\uff0c\u6211\u4eec\u5728 Controllers \u76ee\u5f55\u4e0b\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 TestController.swift \u6587\u4ef6 \uff0c\u4ee3\u7801\u5982\u4e0b import Vapor struct TestController { func createUser ( req : Request ) - String { return Create SwiftMic test user } func updateUser ( req : Request ) - String { return Update SwiftMic test user } func findUser ( req : Request ) - String { let userId = req . parameters . get ( userId ) if nil == userId || userId !. isEmpty { return Require param: userId } return Find SwiftMic test user: + userId ! } func deleteUser ( req : Request ) - String { let userId = req . parameters . get ( userId ) if nil == userId || userId !. isEmpty { return Require param: userId } return Delete SwiftMic test user: + userId ! } } \u6b64\u5904\uff0c TestController \u7ed3\u6784\u4f53\u4e2d\u5b9a\u4e49\u4e86 4 \u4e2a\u65b9\u6cd5\uff08 createUser \u3001 updateUser \u3001 findUser \u3001 deleteUser \uff09\uff0c\u5b83\u4eec\u90fd\u63a5\u6536\u4e86\u4e00\u4e2a Request \u8bf7\u6c42\uff0c\u5904\u7406\u5b8c\u540e\u8fd4\u56de\u4e00\u4e2a Response \uff08\u6b64\u5904\u4e3a String \u7c7b\u578b\uff09\u3002","title":"\u521b\u5efa Controller"},{"location":"base/controller/#controller_2","text":"\u63a5\u4e0b\u6765\uff0c\u5728 routes.swift \u6587\u4ef6\u4e2d\u8fdb\u884c\u7ed1\u5b9a\u64cd\u4f5c\u3002 func routes ( _ app : Application ) throws { ...... let testController = TestController () // \u8bf7\u6c42\u8def\u5f84\uff1atest\uff0c\u8bf7\u6c42\u65b9\u6cd5: POST\uff0c\u54cd\u5e94\u65b9\u6cd5\uff1acreateUser\u3002 app . post ( test , use : testController . createUser ) // \u8bf7\u6c42\u8def\u5f84\uff1atest\uff0c\u8bf7\u6c42\u65b9\u6cd5: PUT\uff0c\u54cd\u5e94\u65b9\u6cd5\uff1aupdateUser\u3002 app . put ( test , use : testController . updateUser ) // \u8bf7\u6c42\u8def\u5f84\uff1atest\uff0c\u53c2\u6570\uff1a userId , \u8bf7\u6c42\u65b9\u6cd5: GET\uff0c\u54cd\u5e94\u65b9\u6cd5\uff1afindUser\u3002 app . get ( test , :userId , use : testController . findUser ) // \u8bf7\u6c42\u8def\u5f84\uff1atest\uff0c\u53c2\u6570\uff1a userId , \u8bf7\u6c42\u65b9\u6cd5: DELETE\uff0c\u54cd\u5e94\u65b9\u6cd5\uff1adeleteUser\u3002 app . delete ( test , :userId , use : testController . deleteUser ) }","title":"\u7ed1\u5b9a Controller"},{"location":"base/controller/#api","text":"\u6700\u540e\uff0c\u901a\u8fc7 CURL \u5de5\u5177\u6a21\u62df HTTP \u8bf7\u6c42\u6765\u6d4b\u8bd5\u4e0b\u8fd9 4 \u4e2a\u63a5\u53e3\u3002","title":"\u6d4b\u8bd5 API"},{"location":"base/controller/#get","text":"Request curl -X GET http://localhost:8080/test/1 Response Find SwiftMic test user: 1","title":"GET"},{"location":"base/controller/#post","text":"Request curl -X POST http://localhost:8080/test Response Create SwiftMic test user","title":"POST"},{"location":"base/controller/#put","text":"Request curl -X PUT http://localhost:8080/test Response Update SwiftMic test user","title":"PUT"},{"location":"base/controller/#delete","text":"Request curl -X DELETE http://localhost:8080/test/1 Response Delete SwiftMic test user: 1","title":"DELETE"},{"location":"base/middleware/","text":"Middleware Middleware \u662f\u4e00\u4e2a\u4e2d\u95f4\u4ef6\u7ec4\u4ef6\uff0c\u5b83\u53ef\u4ee5\u5728 \u8bf7\u6c42\u524d \u548c \u8bf7\u6c42\u540e \u505a\u4e00\u4e9b\u989d\u5916\u7684\u5904\u7406\u3002 \u5982\u4f55\u4f7f\u7528 \u4ee5\u7cfb\u7edf\u4e2d\u95f4\u4ef6 FileMiddleware \u4e3a\u4f8b\u3002 FileMiddleware \u7684\u4f5c\u7528\u662f\u5728\u63a5\u6536\u5230 \u8bf7\u6c42 \u540e\uff0c\u5148\u5728 Public/ \u76ee\u5f55\u4e0b\u67e5\u627e\u662f\u5426\u6709\u5339\u914d\u7684\u8d44\u6e90\u6587\u4ef6\uff0c\u5982\u679c\u5b58\u5728\u7684\u8bdd\u5c31\u76f4\u63a5\u8fd4\u56de\u8be5\u8d44\u6e90\u6587\u4ef6\u3002 \u53ea\u9700\u8981\u5728 configure.swift \u4e2d\u914d\u7f6e\u4e0b\u5373\u53ef\u3002 // Register middleware app . middleware . use ( FileMiddleware ( publicDirectory : app . directory . publicDirectory )) \u6bd4\u5982\uff0c\u6211\u4eec\u5c06\u4e00\u5f20\u6d4b\u8bd5\u56fe\u7247\uff08\u6bd4\u5982\uff1a sample.png \uff09\u5b58\u653e\u5230 Public \u76ee\u5f55\u4e2d\uff0c\u5728\u672c\u5730\u670d\u52a1\u5df2\u542f\u52a8\u7684\u60c5\u51b5\u4e0b\uff08\u5047\u8bbe\u6240\u5360\u7aef\u53e3\u4e3a 8080 \uff09\uff0c\u8bbf\u95ee http://localhost:8080/sample.png \u5730\u5740\u53ef\u76f4\u63a5\u663e\u793a Public/ \u76ee\u5f55\u4e0b\u7684 sample.png \u56fe\u7247\u3002 \u6548\u679c\u5982\u4e0b Middleware \u6e90\u7801 Middleware \u5176\u5b9e\u662f\u4e00\u4e2a protocol \uff0c\u5185\u90e8\u5b9a\u4e49\u4e86 respond \u65b9\u6cd5\uff0c\u6e90\u7801\u5982\u4e0b\uff1a public protocol Middleware { /// Called with each `Request` that passes through this middleware. /// - parameters: /// - request: The incoming `Request`. /// - next: Next `Responder` in the chain, potentially another middleware or the main router. /// - returns: An asynchronous `Response`. func respond ( to request : Request , chainingTo next : Responder ) - EventLoopFuture Response } \u53ef\u4ee5\u5728 respond \u65b9\u6cd5\u4e2d\u505a\u4e00\u4e9b\u989d\u5916\u7684\u5904\u7406\u3002 FileMiddleware \u6e90\u7801\u5206\u6790 FileMiddleware \u6e90\u7801\u5982\u4e0b\uff1a public final class FileMiddleware : Middleware { /// The public directory. /// - note: Must end with a slash. private let publicDirectory : String /// Creates a new `FileMiddleware`. public init ( publicDirectory : String ) { self . publicDirectory = publicDirectory . hasSuffix ( / ) ? publicDirectory : publicDirectory + / } /// See `Middleware`. public func respond ( to request : Request , chainingTo next : Responder ) - EventLoopFuture Response { // make a copy of the path var path = request . url . path // path must be relative. while path . hasPrefix ( / ) { path = String ( path . dropFirst ()) } // protect against relative paths guard ! path . contains ( ../ ) else { return request . eventLoop . makeFailedFuture ( Abort (. forbidden )) } // create absolute file path let filePath = publicDirectory + path // check if file exists and is not a directory var isDir : ObjCBool = false guard FileManager . default . fileExists ( atPath : filePath , isDirectory : isDir ), ! isDir . boolValue else { return next . respond ( to : request ) } // stream the file let res = request . fileio . streamFile ( at : filePath ) return request . eventLoop . makeSucceededFuture ( res ) } } \u67e5\u770b FileMiddleware \u4e2d\u7684 respond \u65b9\u6cd5\u5f97\u77e5\uff0c\u901a\u8fc7 FileManager.default.fileExists \u65b9\u6cd5\u53ef\u4ee5\u5224\u65ad\u6307\u5b9a\u8d44\u6e90\u6587\u4ef6\u662f\u5426\u5b58\u5728\uff0c\u5982\u679c\u5b58\u5728\u7684\u8bdd\uff0c\u5c31\u76f4\u63a5\u5c06\u8be5\u8d44\u6e90\u6587\u4ef6\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\uff0c\u5426\u5219\u901a\u8fc7 next.respond(to: request) \u6765\u6267\u884c\u8fdb\u4e00\u6b65\u7684\u64cd\u4f5c\u3002 \u81ea\u5b9a\u4e49 Middleware \u6211\u4eec\u5c06\u81ea\u5b9a\u4e49\u4e00\u4e2a Middleware \u7ec4\u4ef6\uff0c\u4f5c\u7528\u662f\u5bf9 Request \u8bf7\u6c42\u5904\u7406\u5b8c\u540e\u8fd4\u56de\u7684 Response \u7684 Header \u4fe1\u606f\u4e2d\u7edf\u4e00\u6dfb\u52a0\u4e00\u4e2a Key\uff08\u6bd4\u5982\uff1a My-Key \uff09\u3002 \u521b\u5efa \u521b\u5efa MyMiddleware.swift \u6587\u4ef6\uff0c\u5b58\u653e\u4e8e App/Middleware/ \u76ee\u5f55\u4e0b\u3002 import Vapor public final class MyMiddleware : Middleware { public func respond ( to request : Request , chainingTo next : Responder ) - EventLoopFuture Response { // Handle request before // ...... // Handle request let resposneFuture = next . respond ( to : request ) // Handle request after return resposneFuture . flatMap { response in response . headers . add ( name : My-Key , value : Test123456 ) return request . eventLoop . makeSucceededFuture ( response ) } } } \u8c03\u7528 next.respond(to: request) \u5c06\u4f1a\u5524\u8d77\u8def\u7531\u76f8\u5173\u7684\u56de\u8c03\uff0c\u5e76\u5bf9\u8bf7\u6c42\u8fdb\u884c\u5904\u7406\u3002\u7136\u540e\u901a\u8fc7 response.headers.add(name: \"My-Key\", value: \"Test123456\") \u6765\u7ed9\u7684 Response \u7684 Header \u4fe1\u606f\u4e2d\u6dfb\u52a0\u4e00\u7ec4 Key-Value \u6570\u636e\uff08\u793a\u4f8b\u4e2d Key \u662f My-Key \uff0cValue \u662f Test123456 \uff09\u3002 \u4f7f\u7528 \u5728 configure.swift \u6587\u4ef6\u4e2d\u6dfb\u52a0\u5982\u4e0b\u4ee3\u7801\uff1a app.middleware.use(MyMiddleware()) \u6b64\u65f6\u542f\u52a8\u670d\u52a1\u540e\uff0c MyMiddleware \u4e2d\u95f4\u4ef6\u5c06\u7acb\u5373\u751f\u6548\uff0c\u8bbf\u95ee\u4efb\u610f\u4e00\u4e2a\u63a5\u53e3\uff0c\u8fd4\u56de\u7684 Reponse \u4e2d\u7684\u5934\u4fe1\u606f\u4e2d\u90fd\u5c06\u5305\u542b My-Key \u7684\u4fe1\u606f\u3002","title":"Middleware"},{"location":"base/middleware/#middleware","text":"Middleware \u662f\u4e00\u4e2a\u4e2d\u95f4\u4ef6\u7ec4\u4ef6\uff0c\u5b83\u53ef\u4ee5\u5728 \u8bf7\u6c42\u524d \u548c \u8bf7\u6c42\u540e \u505a\u4e00\u4e9b\u989d\u5916\u7684\u5904\u7406\u3002","title":"Middleware"},{"location":"base/middleware/#_1","text":"\u4ee5\u7cfb\u7edf\u4e2d\u95f4\u4ef6 FileMiddleware \u4e3a\u4f8b\u3002 FileMiddleware \u7684\u4f5c\u7528\u662f\u5728\u63a5\u6536\u5230 \u8bf7\u6c42 \u540e\uff0c\u5148\u5728 Public/ \u76ee\u5f55\u4e0b\u67e5\u627e\u662f\u5426\u6709\u5339\u914d\u7684\u8d44\u6e90\u6587\u4ef6\uff0c\u5982\u679c\u5b58\u5728\u7684\u8bdd\u5c31\u76f4\u63a5\u8fd4\u56de\u8be5\u8d44\u6e90\u6587\u4ef6\u3002 \u53ea\u9700\u8981\u5728 configure.swift \u4e2d\u914d\u7f6e\u4e0b\u5373\u53ef\u3002 // Register middleware app . middleware . use ( FileMiddleware ( publicDirectory : app . directory . publicDirectory )) \u6bd4\u5982\uff0c\u6211\u4eec\u5c06\u4e00\u5f20\u6d4b\u8bd5\u56fe\u7247\uff08\u6bd4\u5982\uff1a sample.png \uff09\u5b58\u653e\u5230 Public \u76ee\u5f55\u4e2d\uff0c\u5728\u672c\u5730\u670d\u52a1\u5df2\u542f\u52a8\u7684\u60c5\u51b5\u4e0b\uff08\u5047\u8bbe\u6240\u5360\u7aef\u53e3\u4e3a 8080 \uff09\uff0c\u8bbf\u95ee http://localhost:8080/sample.png \u5730\u5740\u53ef\u76f4\u63a5\u663e\u793a Public/ \u76ee\u5f55\u4e0b\u7684 sample.png \u56fe\u7247\u3002 \u6548\u679c\u5982\u4e0b","title":"\u5982\u4f55\u4f7f\u7528"},{"location":"base/middleware/#middleware_1","text":"Middleware \u5176\u5b9e\u662f\u4e00\u4e2a protocol \uff0c\u5185\u90e8\u5b9a\u4e49\u4e86 respond \u65b9\u6cd5\uff0c\u6e90\u7801\u5982\u4e0b\uff1a public protocol Middleware { /// Called with each `Request` that passes through this middleware. /// - parameters: /// - request: The incoming `Request`. /// - next: Next `Responder` in the chain, potentially another middleware or the main router. /// - returns: An asynchronous `Response`. func respond ( to request : Request , chainingTo next : Responder ) - EventLoopFuture Response } \u53ef\u4ee5\u5728 respond \u65b9\u6cd5\u4e2d\u505a\u4e00\u4e9b\u989d\u5916\u7684\u5904\u7406\u3002","title":"Middleware \u6e90\u7801"},{"location":"base/middleware/#filemiddleware","text":"FileMiddleware \u6e90\u7801\u5982\u4e0b\uff1a public final class FileMiddleware : Middleware { /// The public directory. /// - note: Must end with a slash. private let publicDirectory : String /// Creates a new `FileMiddleware`. public init ( publicDirectory : String ) { self . publicDirectory = publicDirectory . hasSuffix ( / ) ? publicDirectory : publicDirectory + / } /// See `Middleware`. public func respond ( to request : Request , chainingTo next : Responder ) - EventLoopFuture Response { // make a copy of the path var path = request . url . path // path must be relative. while path . hasPrefix ( / ) { path = String ( path . dropFirst ()) } // protect against relative paths guard ! path . contains ( ../ ) else { return request . eventLoop . makeFailedFuture ( Abort (. forbidden )) } // create absolute file path let filePath = publicDirectory + path // check if file exists and is not a directory var isDir : ObjCBool = false guard FileManager . default . fileExists ( atPath : filePath , isDirectory : isDir ), ! isDir . boolValue else { return next . respond ( to : request ) } // stream the file let res = request . fileio . streamFile ( at : filePath ) return request . eventLoop . makeSucceededFuture ( res ) } } \u67e5\u770b FileMiddleware \u4e2d\u7684 respond \u65b9\u6cd5\u5f97\u77e5\uff0c\u901a\u8fc7 FileManager.default.fileExists \u65b9\u6cd5\u53ef\u4ee5\u5224\u65ad\u6307\u5b9a\u8d44\u6e90\u6587\u4ef6\u662f\u5426\u5b58\u5728\uff0c\u5982\u679c\u5b58\u5728\u7684\u8bdd\uff0c\u5c31\u76f4\u63a5\u5c06\u8be5\u8d44\u6e90\u6587\u4ef6\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\uff0c\u5426\u5219\u901a\u8fc7 next.respond(to: request) \u6765\u6267\u884c\u8fdb\u4e00\u6b65\u7684\u64cd\u4f5c\u3002","title":"FileMiddleware \u6e90\u7801\u5206\u6790"},{"location":"base/middleware/#middleware_2","text":"\u6211\u4eec\u5c06\u81ea\u5b9a\u4e49\u4e00\u4e2a Middleware \u7ec4\u4ef6\uff0c\u4f5c\u7528\u662f\u5bf9 Request \u8bf7\u6c42\u5904\u7406\u5b8c\u540e\u8fd4\u56de\u7684 Response \u7684 Header \u4fe1\u606f\u4e2d\u7edf\u4e00\u6dfb\u52a0\u4e00\u4e2a Key\uff08\u6bd4\u5982\uff1a My-Key \uff09\u3002","title":"\u81ea\u5b9a\u4e49 Middleware"},{"location":"base/middleware/#_2","text":"\u521b\u5efa MyMiddleware.swift \u6587\u4ef6\uff0c\u5b58\u653e\u4e8e App/Middleware/ \u76ee\u5f55\u4e0b\u3002 import Vapor public final class MyMiddleware : Middleware { public func respond ( to request : Request , chainingTo next : Responder ) - EventLoopFuture Response { // Handle request before // ...... // Handle request let resposneFuture = next . respond ( to : request ) // Handle request after return resposneFuture . flatMap { response in response . headers . add ( name : My-Key , value : Test123456 ) return request . eventLoop . makeSucceededFuture ( response ) } } } \u8c03\u7528 next.respond(to: request) \u5c06\u4f1a\u5524\u8d77\u8def\u7531\u76f8\u5173\u7684\u56de\u8c03\uff0c\u5e76\u5bf9\u8bf7\u6c42\u8fdb\u884c\u5904\u7406\u3002\u7136\u540e\u901a\u8fc7 response.headers.add(name: \"My-Key\", value: \"Test123456\") \u6765\u7ed9\u7684 Response \u7684 Header \u4fe1\u606f\u4e2d\u6dfb\u52a0\u4e00\u7ec4 Key-Value \u6570\u636e\uff08\u793a\u4f8b\u4e2d Key \u662f My-Key \uff0cValue \u662f Test123456 \uff09\u3002","title":"\u521b\u5efa"},{"location":"base/middleware/#_3","text":"\u5728 configure.swift \u6587\u4ef6\u4e2d\u6dfb\u52a0\u5982\u4e0b\u4ee3\u7801\uff1a app.middleware.use(MyMiddleware()) \u6b64\u65f6\u542f\u52a8\u670d\u52a1\u540e\uff0c MyMiddleware \u4e2d\u95f4\u4ef6\u5c06\u7acb\u5373\u751f\u6548\uff0c\u8bbf\u95ee\u4efb\u610f\u4e00\u4e2a\u63a5\u53e3\uff0c\u8fd4\u56de\u7684 Reponse \u4e2d\u7684\u5934\u4fe1\u606f\u4e2d\u90fd\u5c06\u5305\u542b My-Key \u7684\u4fe1\u606f\u3002","title":"\u4f7f\u7528"},{"location":"base/routing/","text":"Routing \u8def\u7531\u662f\u7528\u6765\u7ba1\u7406\u63a7\u5236 HTTP \u8bf7\u6c42\u5165\u53e3\u7684\u3002 \u5148\u770b\u4e0b App \u76ee\u5f55\u4e0b\u7684 routes.swift \u6587\u4ef6\uff0c\u6e90\u7801\u5982\u4e0b\u3002 func routes ( _ app : Application ) throws { app . get { req in return It works! } app . get ( hello ) { req in return Hello, world! } let todoController = TodoController () app . get ( todos , use : todoController . index ) app . post ( todos , use : todoController . create ) app . on (. DELETE , todos , :todoID , use : todoController . delete ) let testController = TestController () app . post ( test , use : testController . createUser ) app . put ( test , use : testController . updateUser ) app . get ( test , :userId , use : testController . findUser ) app . delete ( test , :userId , use : testController . deleteUser ) // \u8def\u7531\u7ec4 app . group ( v1 ) { builder in // \u6b64\u5904\u5b9a\u4e49\u7684\u6240\u6709\u8bf7\u6c42\u8def\u5f84\u90fd\u662f\u5728\u8def\u7531\u7ec4\uff08 v1 \uff09\u4e0b\u9762\u7684\u3002 builder . get ( name ) { req in return Handle path: v1/name } builder . get ( avatar ) { req in return Handle path: v1/avatar } } } \u901a\u8fc7 app \uff08 Application \u7c7b\u5b9e\u4f8b\uff09\u53ef\u4ee5\u5bf9\u8def\u7531\u8fdb\u884c\u76f8\u5173\u7684\u914d\u7f6e\u3002 \u76d1\u542c\u6307\u5b9a\u8def\u5f84 app.get( hello ) { req in return Hello, world! } \u5982\u4e0a\u4ee3\u7801\u7684\u4f5c\u7528\u662f\uff0c\u76d1\u542c\u4e86 \"hello\" \u8def\u5f84\uff0c\u5f53\u5ba2\u6237\u7aef\u53d1\u8d77 /hello \u4e3a\u8def\u5f84\u7684 GET \u8bf7\u6c42\u65f6\uff0c\u5c06\u4f1a\u51fa\u53d1\u8be5\u56de\u8c03\u65b9\u6cd5\u7684\u6267\u884c\uff0c\u6700\u7ec8\u8fd4\u56de \"Hello, world!\" \u7ed9\u5ba2\u6237\u7aef\u5c55\u73b0\u3002 \u6d4b\u8bd5 hello Request curl -X GET http://localhost:8080/hello Response Hello, world! \u540c\u7406\uff0c POST \u3001 PUT \u3001 DELETE \u7b49\u64cd\u4f5c\u884c\u4e3a\u4e5f\u662f\u7c7b\u4f3c\u7684\u3002 \u793a\u4f8b\u5982\u4e0b // Method: POST, Path: test1 app.post( test1 ) { req in return Method: POST, Path: test1 } // Method: PUT, Path: test2 app.put( test2 ) { req in return Method: PUT, Path: test2 } // Method: DELETE, Path: test3 app.delete( test3 ) { req in return Method: DELETE, Path: test3 } \u76d1\u542c\u6307\u5b9a\u8def\u5f84\u96c6\u5408 \u6709\u65f6\u5019\u5b9a\u4e49\u7684\u8def\u5f84\u90fd\u662f\u5728\u67d0\u4e00\u4e2a\u7279\u5b9a\u8def\u5f84\u540d\u4e0b\u7684\uff08\u6bd4\u5982 v1 \uff09\uff0c\u8fd9\u65f6\u5019\u5c31\u9700\u8981\u8def\u7531\u7ec4\u6765\u8fdb\u884c\u7ba1\u7406\u4e86\u3002 // \u8def\u7531\u7ec4 app.group( v1 ) { builder in // \u6b64\u5904\u5b9a\u4e49\u7684\u6240\u6709\u8bf7\u6c42\u8def\u5f84\u90fd\u662f\u5728\u8def\u7531\u7ec4\uff08 v1 \uff09\u4e0b\u9762\u7684\u3002 builder.get( name ) { req in return Handle path: v1/name } builder.get( avatar ) { req in return Handle path: v1/avatar } } name \u548c avatar \u90fd\u662f\u6302\u5728 v1 \u540e\u9762\uff0c\u76f8\u5f53\u4e8e v1/name \u548c v1/avatar \u3002 \u6d4b\u8bd5 v1/name Request curl -X GET http://localhost:8080/v1/name Response Handle path: v1/name \u6d4b\u8bd5 v1/avatar Request curl -X GET http://localhost:8080/v1/avatar Response Handle path: v1/avatar","title":"Routing"},{"location":"base/routing/#routing","text":"\u8def\u7531\u662f\u7528\u6765\u7ba1\u7406\u63a7\u5236 HTTP \u8bf7\u6c42\u5165\u53e3\u7684\u3002 \u5148\u770b\u4e0b App \u76ee\u5f55\u4e0b\u7684 routes.swift \u6587\u4ef6\uff0c\u6e90\u7801\u5982\u4e0b\u3002 func routes ( _ app : Application ) throws { app . get { req in return It works! } app . get ( hello ) { req in return Hello, world! } let todoController = TodoController () app . get ( todos , use : todoController . index ) app . post ( todos , use : todoController . create ) app . on (. DELETE , todos , :todoID , use : todoController . delete ) let testController = TestController () app . post ( test , use : testController . createUser ) app . put ( test , use : testController . updateUser ) app . get ( test , :userId , use : testController . findUser ) app . delete ( test , :userId , use : testController . deleteUser ) // \u8def\u7531\u7ec4 app . group ( v1 ) { builder in // \u6b64\u5904\u5b9a\u4e49\u7684\u6240\u6709\u8bf7\u6c42\u8def\u5f84\u90fd\u662f\u5728\u8def\u7531\u7ec4\uff08 v1 \uff09\u4e0b\u9762\u7684\u3002 builder . get ( name ) { req in return Handle path: v1/name } builder . get ( avatar ) { req in return Handle path: v1/avatar } } } \u901a\u8fc7 app \uff08 Application \u7c7b\u5b9e\u4f8b\uff09\u53ef\u4ee5\u5bf9\u8def\u7531\u8fdb\u884c\u76f8\u5173\u7684\u914d\u7f6e\u3002","title":"Routing"},{"location":"base/routing/#_1","text":"app.get( hello ) { req in return Hello, world! } \u5982\u4e0a\u4ee3\u7801\u7684\u4f5c\u7528\u662f\uff0c\u76d1\u542c\u4e86 \"hello\" \u8def\u5f84\uff0c\u5f53\u5ba2\u6237\u7aef\u53d1\u8d77 /hello \u4e3a\u8def\u5f84\u7684 GET \u8bf7\u6c42\u65f6\uff0c\u5c06\u4f1a\u51fa\u53d1\u8be5\u56de\u8c03\u65b9\u6cd5\u7684\u6267\u884c\uff0c\u6700\u7ec8\u8fd4\u56de \"Hello, world!\" \u7ed9\u5ba2\u6237\u7aef\u5c55\u73b0\u3002","title":"\u76d1\u542c\u6307\u5b9a\u8def\u5f84"},{"location":"base/routing/#hello","text":"Request curl -X GET http://localhost:8080/hello Response Hello, world! \u540c\u7406\uff0c POST \u3001 PUT \u3001 DELETE \u7b49\u64cd\u4f5c\u884c\u4e3a\u4e5f\u662f\u7c7b\u4f3c\u7684\u3002 \u793a\u4f8b\u5982\u4e0b // Method: POST, Path: test1 app.post( test1 ) { req in return Method: POST, Path: test1 } // Method: PUT, Path: test2 app.put( test2 ) { req in return Method: PUT, Path: test2 } // Method: DELETE, Path: test3 app.delete( test3 ) { req in return Method: DELETE, Path: test3 }","title":"\u6d4b\u8bd5 hello"},{"location":"base/routing/#_2","text":"\u6709\u65f6\u5019\u5b9a\u4e49\u7684\u8def\u5f84\u90fd\u662f\u5728\u67d0\u4e00\u4e2a\u7279\u5b9a\u8def\u5f84\u540d\u4e0b\u7684\uff08\u6bd4\u5982 v1 \uff09\uff0c\u8fd9\u65f6\u5019\u5c31\u9700\u8981\u8def\u7531\u7ec4\u6765\u8fdb\u884c\u7ba1\u7406\u4e86\u3002 // \u8def\u7531\u7ec4 app.group( v1 ) { builder in // \u6b64\u5904\u5b9a\u4e49\u7684\u6240\u6709\u8bf7\u6c42\u8def\u5f84\u90fd\u662f\u5728\u8def\u7531\u7ec4\uff08 v1 \uff09\u4e0b\u9762\u7684\u3002 builder.get( name ) { req in return Handle path: v1/name } builder.get( avatar ) { req in return Handle path: v1/avatar } } name \u548c avatar \u90fd\u662f\u6302\u5728 v1 \u540e\u9762\uff0c\u76f8\u5f53\u4e8e v1/name \u548c v1/avatar \u3002","title":"\u76d1\u542c\u6307\u5b9a\u8def\u5f84\u96c6\u5408"},{"location":"base/routing/#v1name","text":"Request curl -X GET http://localhost:8080/v1/name Response Handle path: v1/name","title":"\u6d4b\u8bd5 v1/name"},{"location":"base/routing/#v1avatar","text":"Request curl -X GET http://localhost:8080/v1/avatar Response Handle path: v1/avatar","title":"\u6d4b\u8bd5 v1/avatar"},{"location":"database/mysql/","text":"MySQL \u521b\u5efa MySQL \u6570\u636e\u5e93 -- \u521b\u5efa\u6570\u636e\u5e93 CREATE DATABASE swift_fluent_test DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ; USE swift_fluent_test ; -- \u521b\u5efauser\u8868 CREATE TABLE user ( id INT NOT NULL AUTO_INCREMENT , username VARCHAR ( 255 ) NOT NULL COMMENT \u7528\u6237\u540d , PRIMARY KEY ( id ) ); -- \u521b\u5efaarticle\u8868 CREATE TABLE article ( id INT NOT NULL AUTO_INCREMENT , title VARCHAR ( 255 ) NOT NULL COMMENT \u6807\u9898 , content LONGTEXT NOT NULL COMMENT \u6b63\u6587 , authorId INT NOT NULL COMMENT \u4f5c\u8005Id , cover VARCHAR ( 255 ) NULL COMMENT \u5c01\u9762 , PRIMARY KEY ( id ) ); \u914d\u7f6e \u7f16\u8f91 Package.swift \u6587\u4ef6\uff0c\u589e\u52a0 MySQL \u76f8\u5173\u4f9d\u8d56\u3002 dependencies : [ . package ( url : https://github.com/vapor/vapor.git , from : 4.0.0 ), . package ( url : https://github.com/vapor/fluent.git , from : 4.0.0-rc ), . package ( url : https://github.com/vapor/fluent-mysql-driver.git , from : 4.0.0-rc ), ], targets : [ . target ( name : App , dependencies : [ . product ( name : Fluent , package : fluent ), . product ( name : FluentMySQLDriver , package : fluent-mysql-driver ), . product ( name : Vapor , package : vapor ) ]), ...... ] \u5728\u5f53\u524d\u9879\u76ee\u76ee\u5f55\u4e0b\uff0c\u6267\u884c vapor update \u547d\u4ee4\uff0c\u66f4\u65b0 Package.swift \u914d\u7f6e\u7684\u76f8\u5173\u4f9d\u8d56\u3002 \u7136\u540e\uff0c\u7f16\u8f91 configure.swift \u6587\u4ef6\uff0c\u589e\u52a0\u5982\u4e0b\u4ee3\u7801\uff1a import Fluent import FluentMySQLDriver import Vapor // Called before your application initializes. public func configure ( _ app : Application ) throws { // config MySQL app . databases . use (. mysql ( hostname : 127.0.0.1 , port : 3306 , username : root , password : YourPassword , database : swift_mic_test , tlsConfiguration : nil ), as : . mysql ) ...... } \u6ce8\u610f \u5177\u4f53\u53c2\u6570\u4ee5\u5b9e\u9645\u914d\u7f6e\u4e3a\u51c6\uff0c\u53ef\u80fd\u4e0e\u4e0a\u8ff0\u914d\u7f6e\u53c2\u6570\u6709\u51fa\u5165\u3002 \u81f3\u6b64\uff0c MySQL \u76f8\u5173\u914d\u7f6e\u5df2\u5c31\u7eea\u3002 Model \u5047\u5982\u6211\u4eec\u9700\u8981\u5b9e\u73b0\u4e00\u4e2a\u7528\u6237\u7684\u589e\u5220\u6539\u67e5\u64cd\u4f5c\uff1a \u6ce8\u518c\u4e00\u4e2a\u7528\u6237\uff08\u589e\uff09 \u67e5\u8be2\u4e00\u4e2a\u7528\u6237\u4fe1\u606f\uff08\u67e5\uff09 \u4fee\u6539\u4e00\u4e2a\u7528\u6237\u4fe1\u606f\uff08\u6539\uff09 \u5220\u9664\u4e00\u4e2a\u7528\u6237\uff08\u5220\uff09 \u6b64\u65f6\uff0c\u9700\u8981\u6784\u9020\u6570\u636e\u5e93\u8981\u7528\u5230\u7684 Model \u3002\u5047\u8bbe\u6570\u636e\u5e93 user \u8868\u4e2d\u6709\u4e24\u4e2a\u5b57\u6bb5\uff0c\u5206\u522b\u4e3a \u4e3b\u952eid \u548c username \u5b57\u6bb5\uff0c\u6309\u5982\u4e0b\u4ee3\u7801\u521b\u5efa User \u7c7b\uff1a import Fluent import Vapor final class User : Model , Content { static let schema = user @ ID ( custom : id ) var id : Int ? @ Field ( key : username ) var username : String init () {} init ( id : Int ? = nil , title : String ) { self . id = id self . username = title } } \u5176\u4e2d\uff0c schema \u503c\u5bf9\u5e94\u7684\u662f\u6570\u636e\u5e93\u8868\u540d\u3002 @ID(custom: \"id\") \u5173\u8054\u7684\u662f user \u8868\u4e2d\u7684 \u4e3b\u952eid \u5b57\u6bb5\u3002 @Field(key: \"username\") \u5173\u8054\u7684\u662f user \u8868\u4e2d\u7684 username \u5b57\u6bb5\u3002 \u6700\u540e\uff0c\u8ba9 User \u7c7b\u5b9e\u73b0 Model \u534f\u8bae\u5373\u53ef\u3002 Controller \u521b\u5efa UserController \u7c7b\uff1a import Vapor import Fluent class UserController { /// \u521b\u5efa\u7528\u6237 func createUser ( req : Request ) throws - EventLoopFuture String { let userInput = try req . content . decode ( UserInput . self ) let user = User ( username : userInput . username ) return user . save ( on : req . db ). map { let userResponse = UserResponse ( id : user . id !, username : user . username ) return ResponseWrapper ( protocolCode : . success , obj : userResponse ). makeResponse () } } /// \u67e5\u627e\u7528\u6237 func findUser ( req : Request ) - EventLoopFuture String { guard let userId = req . parameters . get ( userId ) as Int ? else { // \u53c2\u6570\u9519\u8bef return ResponseWrapper DefaultResponseObj ( protocolCode : . failParamError ). makeFutureResponse ( req : req ) } return User . find ( userId , on : req . db ). map { user - String in guard let user = user else { return ResponseWrapper DefaultResponseObj ( protocolCode : . failAccountNoExisted ). makeResponse () } return ResponseWrapper ( protocolCode : . success , obj : user ). makeResponse () } } /// \u66f4\u65b0\u7528\u6237 func updateUser ( req : Request ) throws - EventLoopFuture String { let user = try req . content . decode ( User . self ) let username = user . username return User . find ( user . id !, on : req . db ). flatMap { newUser - EventLoopFuture String in if nil == newUser { return ResponseWrapper DefaultResponseObj ( protocolCode : . failAccountNoExisted ). makeFutureResponse ( req : req ) } newUser !. username = username return newUser !. update ( on : req . db ). map { return ResponseWrapper ( protocolCode : . success , obj : newUser !). makeResponse () } } } /// \u5220\u9664\u7528\u6237 func deleteUser ( req : Request ) - EventLoopFuture String { guard let userId = req . parameters . get ( userId ) as Int ? else { // \u53c2\u6570\u9519\u8bef return ResponseWrapper DefaultResponseObj ( protocolCode : . failParamError ). makeFutureResponse ( req : req ) } let user = User () user . id = userId return user . delete ( on : req . db ). map { return ResponseWrapper DefaultResponseObj ( protocolCode : . success ). makeResponse () } } } Route \u7f16\u8f91 routes.swift \u6587\u4ef6\uff0c\u589e\u52a0\u5982\u4e0b\u4ee3\u7801\uff1a func routes ( _ app : Application ) throws { ...... let userController = UserController () app . post ( user , use : userController . createUser ) app . get ( user , :userId , use : userController . findUser ) app . put ( user , use : userController . updateUser ) app . delete ( user , :userId , use : userController . deleteUser ) ...... } \u4f7f\u7528\u539f\u751f SQL \u7f16\u8f91 routes.swift \u6587\u4ef6\uff0c\u589e\u52a0\u5982\u4e0b\u4ee3\u7801\uff1a app . get ([ user , top10 ], use : userController . fetchUserTop10 ) \u7f16\u8f91 UserController.swift \u6587\u4ef6\uff0c\u589e\u52a0\u5982\u4e0b\u4ee3\u7801\uff1a /// \u67e5\u8be2\u524d10\u4e2a\u7528\u6237\u4fe1\u606f func fetchUserTop10 ( req : Request ) throws - EventLoopFuture String { let sql = SELECT * FROM user LIMIT 10; return ( req . db as ! MySQLDatabase ). sql (). raw ( SQLQueryString ( sql )). all ( decoding : User . self ). map { users in print ( user = \\( users ) ) return ResponseWrapper ( protocolCode : . success , obj : users ). makeResponse () } } raw \u67e5\u8be2\u4e5f\u652f\u6301 all() \u3001 first() \u3001 run() \u65b9\u6cd5\u3002 \u6d4b\u8bd5 \u542f\u52a8\u670d\u52a1\u540e\uff0c\u53ef\u6784\u9020\u5982\u4e0b HTTP \u8bf7\u6c42\u8fdb\u884c\u6d4b\u8bd5\u3002 \u521b\u5efa\u7528\u6237 Request curl --location --request POST localhost:8080/user \\ --header Content-Type: application/json \\ --data-raw { username : zzb5 } Response { msg : success , obj : { id : 5 , username : zzb5 } , code : 200 } \u67e5\u8be2\u7528\u6237\u4fe1\u606f Request curl --location --request GET localhost:8080/user/5 Response { msg : success , obj : { id : 5 , username : zzb5 } , code : 200 } \u66f4\u65b0\u7528\u6237\u4fe1\u606f Request curl --location --request PUT localhost:8080/user \\ --header Content-Type: application/json \\ --data-raw { id : 5, username : zzb5_new } Response { msg : success , obj : { id : 5 , username : zzb5_new } , code : 200 } \u5220\u9664\u7528\u6237 Request curl --location --request DELETE localhost:8080/user/5 \\ --data-raw Response { msg : success , code : 200 } \u6e90\u7801 \u53ef\u53c2\u8003\u6e90\u7801\uff1a ExampleMySQL","title":"MySQL"},{"location":"database/mysql/#mysql","text":"","title":"MySQL"},{"location":"database/mysql/#mysql_1","text":"-- \u521b\u5efa\u6570\u636e\u5e93 CREATE DATABASE swift_fluent_test DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ; USE swift_fluent_test ; -- \u521b\u5efauser\u8868 CREATE TABLE user ( id INT NOT NULL AUTO_INCREMENT , username VARCHAR ( 255 ) NOT NULL COMMENT \u7528\u6237\u540d , PRIMARY KEY ( id ) ); -- \u521b\u5efaarticle\u8868 CREATE TABLE article ( id INT NOT NULL AUTO_INCREMENT , title VARCHAR ( 255 ) NOT NULL COMMENT \u6807\u9898 , content LONGTEXT NOT NULL COMMENT \u6b63\u6587 , authorId INT NOT NULL COMMENT \u4f5c\u8005Id , cover VARCHAR ( 255 ) NULL COMMENT \u5c01\u9762 , PRIMARY KEY ( id ) );","title":"\u521b\u5efa MySQL \u6570\u636e\u5e93"},{"location":"database/mysql/#_1","text":"\u7f16\u8f91 Package.swift \u6587\u4ef6\uff0c\u589e\u52a0 MySQL \u76f8\u5173\u4f9d\u8d56\u3002 dependencies : [ . package ( url : https://github.com/vapor/vapor.git , from : 4.0.0 ), . package ( url : https://github.com/vapor/fluent.git , from : 4.0.0-rc ), . package ( url : https://github.com/vapor/fluent-mysql-driver.git , from : 4.0.0-rc ), ], targets : [ . target ( name : App , dependencies : [ . product ( name : Fluent , package : fluent ), . product ( name : FluentMySQLDriver , package : fluent-mysql-driver ), . product ( name : Vapor , package : vapor ) ]), ...... ] \u5728\u5f53\u524d\u9879\u76ee\u76ee\u5f55\u4e0b\uff0c\u6267\u884c vapor update \u547d\u4ee4\uff0c\u66f4\u65b0 Package.swift \u914d\u7f6e\u7684\u76f8\u5173\u4f9d\u8d56\u3002 \u7136\u540e\uff0c\u7f16\u8f91 configure.swift \u6587\u4ef6\uff0c\u589e\u52a0\u5982\u4e0b\u4ee3\u7801\uff1a import Fluent import FluentMySQLDriver import Vapor // Called before your application initializes. public func configure ( _ app : Application ) throws { // config MySQL app . databases . use (. mysql ( hostname : 127.0.0.1 , port : 3306 , username : root , password : YourPassword , database : swift_mic_test , tlsConfiguration : nil ), as : . mysql ) ...... } \u6ce8\u610f \u5177\u4f53\u53c2\u6570\u4ee5\u5b9e\u9645\u914d\u7f6e\u4e3a\u51c6\uff0c\u53ef\u80fd\u4e0e\u4e0a\u8ff0\u914d\u7f6e\u53c2\u6570\u6709\u51fa\u5165\u3002 \u81f3\u6b64\uff0c MySQL \u76f8\u5173\u914d\u7f6e\u5df2\u5c31\u7eea\u3002","title":"\u914d\u7f6e"},{"location":"database/mysql/#model","text":"\u5047\u5982\u6211\u4eec\u9700\u8981\u5b9e\u73b0\u4e00\u4e2a\u7528\u6237\u7684\u589e\u5220\u6539\u67e5\u64cd\u4f5c\uff1a \u6ce8\u518c\u4e00\u4e2a\u7528\u6237\uff08\u589e\uff09 \u67e5\u8be2\u4e00\u4e2a\u7528\u6237\u4fe1\u606f\uff08\u67e5\uff09 \u4fee\u6539\u4e00\u4e2a\u7528\u6237\u4fe1\u606f\uff08\u6539\uff09 \u5220\u9664\u4e00\u4e2a\u7528\u6237\uff08\u5220\uff09 \u6b64\u65f6\uff0c\u9700\u8981\u6784\u9020\u6570\u636e\u5e93\u8981\u7528\u5230\u7684 Model \u3002\u5047\u8bbe\u6570\u636e\u5e93 user \u8868\u4e2d\u6709\u4e24\u4e2a\u5b57\u6bb5\uff0c\u5206\u522b\u4e3a \u4e3b\u952eid \u548c username \u5b57\u6bb5\uff0c\u6309\u5982\u4e0b\u4ee3\u7801\u521b\u5efa User \u7c7b\uff1a import Fluent import Vapor final class User : Model , Content { static let schema = user @ ID ( custom : id ) var id : Int ? @ Field ( key : username ) var username : String init () {} init ( id : Int ? = nil , title : String ) { self . id = id self . username = title } } \u5176\u4e2d\uff0c schema \u503c\u5bf9\u5e94\u7684\u662f\u6570\u636e\u5e93\u8868\u540d\u3002 @ID(custom: \"id\") \u5173\u8054\u7684\u662f user \u8868\u4e2d\u7684 \u4e3b\u952eid \u5b57\u6bb5\u3002 @Field(key: \"username\") \u5173\u8054\u7684\u662f user \u8868\u4e2d\u7684 username \u5b57\u6bb5\u3002 \u6700\u540e\uff0c\u8ba9 User \u7c7b\u5b9e\u73b0 Model \u534f\u8bae\u5373\u53ef\u3002","title":"Model"},{"location":"database/mysql/#controller","text":"\u521b\u5efa UserController \u7c7b\uff1a import Vapor import Fluent class UserController { /// \u521b\u5efa\u7528\u6237 func createUser ( req : Request ) throws - EventLoopFuture String { let userInput = try req . content . decode ( UserInput . self ) let user = User ( username : userInput . username ) return user . save ( on : req . db ). map { let userResponse = UserResponse ( id : user . id !, username : user . username ) return ResponseWrapper ( protocolCode : . success , obj : userResponse ). makeResponse () } } /// \u67e5\u627e\u7528\u6237 func findUser ( req : Request ) - EventLoopFuture String { guard let userId = req . parameters . get ( userId ) as Int ? else { // \u53c2\u6570\u9519\u8bef return ResponseWrapper DefaultResponseObj ( protocolCode : . failParamError ). makeFutureResponse ( req : req ) } return User . find ( userId , on : req . db ). map { user - String in guard let user = user else { return ResponseWrapper DefaultResponseObj ( protocolCode : . failAccountNoExisted ). makeResponse () } return ResponseWrapper ( protocolCode : . success , obj : user ). makeResponse () } } /// \u66f4\u65b0\u7528\u6237 func updateUser ( req : Request ) throws - EventLoopFuture String { let user = try req . content . decode ( User . self ) let username = user . username return User . find ( user . id !, on : req . db ). flatMap { newUser - EventLoopFuture String in if nil == newUser { return ResponseWrapper DefaultResponseObj ( protocolCode : . failAccountNoExisted ). makeFutureResponse ( req : req ) } newUser !. username = username return newUser !. update ( on : req . db ). map { return ResponseWrapper ( protocolCode : . success , obj : newUser !). makeResponse () } } } /// \u5220\u9664\u7528\u6237 func deleteUser ( req : Request ) - EventLoopFuture String { guard let userId = req . parameters . get ( userId ) as Int ? else { // \u53c2\u6570\u9519\u8bef return ResponseWrapper DefaultResponseObj ( protocolCode : . failParamError ). makeFutureResponse ( req : req ) } let user = User () user . id = userId return user . delete ( on : req . db ). map { return ResponseWrapper DefaultResponseObj ( protocolCode : . success ). makeResponse () } } }","title":"Controller"},{"location":"database/mysql/#route","text":"\u7f16\u8f91 routes.swift \u6587\u4ef6\uff0c\u589e\u52a0\u5982\u4e0b\u4ee3\u7801\uff1a func routes ( _ app : Application ) throws { ...... let userController = UserController () app . post ( user , use : userController . createUser ) app . get ( user , :userId , use : userController . findUser ) app . put ( user , use : userController . updateUser ) app . delete ( user , :userId , use : userController . deleteUser ) ...... }","title":"Route"},{"location":"database/mysql/#sql","text":"\u7f16\u8f91 routes.swift \u6587\u4ef6\uff0c\u589e\u52a0\u5982\u4e0b\u4ee3\u7801\uff1a app . get ([ user , top10 ], use : userController . fetchUserTop10 ) \u7f16\u8f91 UserController.swift \u6587\u4ef6\uff0c\u589e\u52a0\u5982\u4e0b\u4ee3\u7801\uff1a /// \u67e5\u8be2\u524d10\u4e2a\u7528\u6237\u4fe1\u606f func fetchUserTop10 ( req : Request ) throws - EventLoopFuture String { let sql = SELECT * FROM user LIMIT 10; return ( req . db as ! MySQLDatabase ). sql (). raw ( SQLQueryString ( sql )). all ( decoding : User . self ). map { users in print ( user = \\( users ) ) return ResponseWrapper ( protocolCode : . success , obj : users ). makeResponse () } } raw \u67e5\u8be2\u4e5f\u652f\u6301 all() \u3001 first() \u3001 run() \u65b9\u6cd5\u3002","title":"\u4f7f\u7528\u539f\u751f SQL"},{"location":"database/mysql/#_2","text":"\u542f\u52a8\u670d\u52a1\u540e\uff0c\u53ef\u6784\u9020\u5982\u4e0b HTTP \u8bf7\u6c42\u8fdb\u884c\u6d4b\u8bd5\u3002","title":"\u6d4b\u8bd5"},{"location":"database/mysql/#_3","text":"Request curl --location --request POST localhost:8080/user \\ --header Content-Type: application/json \\ --data-raw { username : zzb5 } Response { msg : success , obj : { id : 5 , username : zzb5 } , code : 200 }","title":"\u521b\u5efa\u7528\u6237"},{"location":"database/mysql/#_4","text":"Request curl --location --request GET localhost:8080/user/5 Response { msg : success , obj : { id : 5 , username : zzb5 } , code : 200 }","title":"\u67e5\u8be2\u7528\u6237\u4fe1\u606f"},{"location":"database/mysql/#_5","text":"Request curl --location --request PUT localhost:8080/user \\ --header Content-Type: application/json \\ --data-raw { id : 5, username : zzb5_new } Response { msg : success , obj : { id : 5 , username : zzb5_new } , code : 200 }","title":"\u66f4\u65b0\u7528\u6237\u4fe1\u606f"},{"location":"database/mysql/#_6","text":"Request curl --location --request DELETE localhost:8080/user/5 \\ --data-raw Response { msg : success , code : 200 }","title":"\u5220\u9664\u7528\u6237"},{"location":"database/mysql/#_7","text":"\u53ef\u53c2\u8003\u6e90\u7801\uff1a ExampleMySQL","title":"\u6e90\u7801"},{"location":"database/redis/","text":"Redis TODO","title":"Redis"},{"location":"database/redis/#redis","text":"TODO","title":"Redis"},{"location":"install/install_linux/","text":"Linux \u5b89\u88c5 Vapor TODO","title":"Linux"},{"location":"install/install_linux/#linux-vapor","text":"TODO","title":"Linux \u5b89\u88c5 Vapor"},{"location":"install/install_mac/","text":"macOS \u5b89\u88c5 Vapor \u5b89\u88c5 Xcode \u56e0\u4e3a Vapor 4 \u9700\u8981 Swift 5.2\uff08\u6216\u4ee5\u4e0a\uff09 \u7248\u672c\uff0c\u6240\u4ee5\u9700\u8981\u5148\u5b89\u88c5 Xcode 11.4\uff08\u6216\u4ee5\u4e0a\uff09\u3002 \u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u6765\u786e\u8ba4\u5f53\u524d Swift \u7248\u672c\u3002 swift --version \u5c06\u663e\u793a\u5bf9\u5e94\u7684 Swift \u7248\u672c\u4fe1\u606f\u3002 Apple Swift version 5.2 (swiftlang-1103.0.32.1 clang-1103.0.32.29) Target: x86_64-apple-darwin19.4.0 \u5b89\u88c5 Toolbox \u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\u3002 brew install vapor/tap/vapor \u5b89\u88c5\u6210\u529f\u540e\uff0c\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\uff0c\u5c06\u663e\u793a\u53ef\u7528\u7684\u547d\u4ee4\u5217\u8868\u3002 $ vapor -help Usage: vapor command Join our team chat if you have questions, need help, or want to contribute: http://vapor.team Commands: new Creates a new Vapor application from a template. Use --template=repo/template for github templates Use --template=full-url-here.git for non github templates Use --web to create a new web app Use --auth to create a new authenticated API app Use --api (default) to create a new API build Compiles the application. run Runs the compiled application. fetch Fetches the application s dependencies. update Updates your dependencies. clean Cleans temporary files--usually fixes a plethora of bizarre build errors. test Runs the application s tests. xcode Generates an Xcode project for development. Additionally links commonly used libraries. version Displays Vapor CLI version cloud Commands for interacting with Vapor Cloud. heroku Commands to help deploy to Heroku. provider Commands to help manage providers. Use `vapor command --help` for more information on a command.","title":"macOS"},{"location":"install/install_mac/#macos-vapor","text":"","title":"macOS \u5b89\u88c5 Vapor"},{"location":"install/install_mac/#xcode","text":"\u56e0\u4e3a Vapor 4 \u9700\u8981 Swift 5.2\uff08\u6216\u4ee5\u4e0a\uff09 \u7248\u672c\uff0c\u6240\u4ee5\u9700\u8981\u5148\u5b89\u88c5 Xcode 11.4\uff08\u6216\u4ee5\u4e0a\uff09\u3002 \u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u6765\u786e\u8ba4\u5f53\u524d Swift \u7248\u672c\u3002 swift --version \u5c06\u663e\u793a\u5bf9\u5e94\u7684 Swift \u7248\u672c\u4fe1\u606f\u3002 Apple Swift version 5.2 (swiftlang-1103.0.32.1 clang-1103.0.32.29) Target: x86_64-apple-darwin19.4.0","title":"\u5b89\u88c5 Xcode"},{"location":"install/install_mac/#toolbox","text":"\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\u3002 brew install vapor/tap/vapor \u5b89\u88c5\u6210\u529f\u540e\uff0c\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\uff0c\u5c06\u663e\u793a\u53ef\u7528\u7684\u547d\u4ee4\u5217\u8868\u3002 $ vapor -help Usage: vapor command Join our team chat if you have questions, need help, or want to contribute: http://vapor.team Commands: new Creates a new Vapor application from a template. Use --template=repo/template for github templates Use --template=full-url-here.git for non github templates Use --web to create a new web app Use --auth to create a new authenticated API app Use --api (default) to create a new API build Compiles the application. run Runs the compiled application. fetch Fetches the application s dependencies. update Updates your dependencies. clean Cleans temporary files--usually fixes a plethora of bizarre build errors. test Runs the application s tests. xcode Generates an Xcode project for development. Additionally links commonly used libraries. version Displays Vapor CLI version cloud Commands for interacting with Vapor Cloud. heroku Commands to help deploy to Heroku. provider Commands to help manage providers. Use `vapor command --help` for more information on a command.","title":"\u5b89\u88c5 Toolbox"}]}