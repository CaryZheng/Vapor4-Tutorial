{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u5e8f Vapor \u662f\u57fa\u4e8e Swift \u5b9e\u73b0\u7684 Web \u6846\u67b6\uff0c\u53ef\u8fd0\u884c\u4e8e macOS \u548c Ubuntu \u7cfb\u7edf\u4e0a\u3002 \u672c\u6559\u7a0b\u4e3b\u8981\u662f\u9488\u5bf9 Vapor 4 \u7684\u901f\u6210\u6307\u5357\u3002\uff08\u6ce8\uff1a\u9010\u6b65\u66f4\u65b0\u4e2d\uff09 Swift \u793e\u533a SwiftMic\uff1a www.swiftmic.com Contact QQ\u7fa4 (Vapor\u4ea4\u6d41)\uff1a 566732724 \u8054\u7cfb\u4f5c\u8005\uff1aCaryZhengMy#gmail.com (#\u66ff\u6362\u6210@) \u58f0\u660e \u672c\u6559\u7a0b\u7248\u6743\u5f52\u4f5c\u8005 CaryZheng \u6240\u6709\uff0c\u672a\u7ecf\u4f5c\u8005\u8bb8\u53ef\uff0c\u4e0d\u5f97\u7528\u4e8e\u5546\u4e1a\u7528\u9014\u3002","title":"\u5e8f"},{"location":"#_1","text":"Vapor \u662f\u57fa\u4e8e Swift \u5b9e\u73b0\u7684 Web \u6846\u67b6\uff0c\u53ef\u8fd0\u884c\u4e8e macOS \u548c Ubuntu \u7cfb\u7edf\u4e0a\u3002 \u672c\u6559\u7a0b\u4e3b\u8981\u662f\u9488\u5bf9 Vapor 4 \u7684\u901f\u6210\u6307\u5357\u3002\uff08\u6ce8\uff1a\u9010\u6b65\u66f4\u65b0\u4e2d\uff09","title":"\u5e8f"},{"location":"#swift","text":"SwiftMic\uff1a www.swiftmic.com","title":"Swift \u793e\u533a"},{"location":"#contact","text":"QQ\u7fa4 (Vapor\u4ea4\u6d41)\uff1a 566732724 \u8054\u7cfb\u4f5c\u8005\uff1aCaryZhengMy#gmail.com (#\u66ff\u6362\u6210@)","title":"Contact"},{"location":"#_2","text":"\u672c\u6559\u7a0b\u7248\u6743\u5f52\u4f5c\u8005 CaryZheng \u6240\u6709\uff0c\u672a\u7ecf\u4f5c\u8005\u8bb8\u53ef\uff0c\u4e0d\u5f97\u7528\u4e8e\u5546\u4e1a\u7528\u9014\u3002","title":"\u58f0\u660e"},{"location":"deploy/","text":"\u90e8\u7f72 TODO","title":"\u90e8\u7f72"},{"location":"deploy/#_1","text":"TODO","title":"\u90e8\u7f72"},{"location":"hello_world/","text":"Hello World \u672c\u7ae0\u6559\u7a0b\u6559\u5c06\u5e26\u4f60\u521b\u5efa\u7b2c\u4e00\u4e2a Vapor \u9879\u76ee\u3002 \u521b\u5efa\u9879\u76ee \u901a\u8fc7 vapor \u547d\u4ee4\u884c\u5de5\u5177\u521b\u5efa\u9879\u76ee\uff0c\u9879\u76ee\u540d\u79f0\u547d\u540d\u4e3a Vapor4Example \u3002 vapor new Vapor4Example -branch=4 \u521b\u5efa\u6210\u529f\u540e\uff0c\u5c06\u8f93\u51fa\u5982\u4e0b\u4fe1\u606f\u3002 Cloning Template [Done] Updating Package Name [Done] Initializing git repository [Done] ** **~~** **~~~~~~** **~~~~~~~~~~** **~~~~~~~~~~~~~~** **~~~~~~~~~~~~~~~~~~** **~~~~~~~~~~~~~~~~~~~~~~** **~~~~~~~~~~~~~~~~~~~~~~~~** **~~~~~~~~~~~~~~~~~~~~~~~~~~** **~~~~~~~~~~~~~~~~~~~~~~~~~~~~** **~~~~~~~~~~~~~~~~~~~~~~~~~~~~** **~~~~~~~~~~~~~~~~~~~~~++++~~~** **~~~~~~~~~~~~~~~~~~~++++~~~** ***~~~~~~~~~~~~~~~++++~~~*** ****~~~~~~~~~~++++~~**** *****~~~~~~~~~***** ************* _ __ ___ ___ ___ \\ \\ / / /\\ | |_) / / \\ | |_) \\_\\/ /_/--\\ |_| \\_\\_/ |_| \\ a web framework for Swift Project Vapor4Example has been created. Type `cd Vapor4Example` to enter the project directory. Use `vapor cloud deploy` to host your project for free! Enjoy! \u8fd0\u884c\u9879\u76ee \u6b64\u65f6\uff0c\u6211\u4eec\u5148\u4e0d\u5206\u6790\u4ee3\u7801\uff0c\u5148\u5c06\u8be5 vapor \u9879\u76ee run \u8d77\u6765\uff0c\u770b\u770b\u6700\u7ec8\u6548\u679c\u3002 \u6b65\u9aa4\u5982\u4e0b\uff1a \u6267\u884c cd Vapor4Example \u8fdb\u5165\u5230\u521a\u521b\u5efa\u597d\u7684\u9879\u76ee\u76ee\u5f55\u4e2d\u3002 \u901a\u8fc7\u5982\u4e0b\u547d\u4ee4 build \u9879\u76ee\u4ee3\u7801\u3002 vapor build build \u6210\u529f\u540e\u5c06\u8f93\u51fa\u5982\u4e0b\u4fe1\u606f\u3002 Building Project [Done] \u901a\u8fc7\u5982\u4e0b\u547d\u4ee4 run \u9879\u76ee\u3002 vapor run \u8fd9\u65f6\u5019\u5c06\u8f93\u51fa\u5982\u4e0b\u4fe1\u606f\u3002 Running app ... [ NOTICE ] Server starting on http://127.0.0.1:8080 \u7136\u540e\u8bbf\u95ee http://127.0.0.1:8080 \u5730\u5740\uff0c\u5982\u679c\u8fd4\u56de It works! \uff0c\u5219\u610f\u5473\u7740\u4f60\u7684\u7b2c\u4e00\u4e2a vapor \u9879\u76ee\u5df2\u7ecf run \u6210\u529f\u4e86\u3002 \u751f\u6210 Xcode \u9879\u76ee \u6267\u884c vapor xcode \u547d\u4ee4\uff0c\u5c06\u4f1a\u81ea\u52a8\u751f\u6210\u4e00\u4e2a\u5b8c\u6574\u7684 Xcode \u9879\u76ee\u3002 $ vapor xcode Generating Xcode Project [Done] Select the `Run` scheme to run. Open Xcode project? y/n y Opening Xcode project... \u53ef\u4ee5\u9009\u62e9 Xcode \u4e2d\u7684 Run scheme \u8fdb\u884c\u7f16\u8bd1\u8fd0\u884c\u3002 \u5982\u56fe\u6240\u793a \u76ee\u5f55\u7ed3\u6784 \u63a5\u4e0b\u6765\u5c06\u5206\u6790\u4e0b\u9879\u76ee\u7684\u76ee\u5f55\u7ed3\u6784\uff0c\u5982\u4e0b\u6240\u793a\u3002 . \u251c\u2500\u2500 Public \u251c\u2500\u2500 Sources \u2502 \u251c\u2500\u2500 App \u2502 \u2502 \u251c\u2500\u2500 Controllers \u2502 \u2502 \u251c\u2500\u2500 Migrations \u2502 \u2502 \u251c\u2500\u2500 Models \u2502 \u2502 \u251c\u2500\u2500 app.swift \u2502 \u2502 \u251c\u2500\u2500 configure.swift \u2502 \u2502 \u2514\u2500\u2500 routes.swift \u2502 \u2514\u2500\u2500 Run \u2502 \u2514\u2500\u2500 main.swift \u251c\u2500\u2500 Tests \u2502 \u2514\u2500\u2500 AppTests \u2514\u2500\u2500 Package.swift Public \u8be5\u76ee\u5f55\u4e3b\u8981\u5b58\u653e\u4e00\u4e9b\u53ef\u516c\u5f00\u8bbf\u95ee\u7684\u8d44\u6e90\u6587\u4ef6\uff0c\u6bd4\u5982\u56fe\u7247\u6587\u4ef6\u3001CSS \u6587\u4ef6\u4ee5\u53ca JavaScript \u6587\u4ef6\u7b49\u3002 \u9996\u5148\uff0c\u9700\u4fee\u6539 configure.swift \u6587\u4ef6\u6765\u5f00\u542f\u4f7f\u7528 FileMiddleware \u4e2d\u95f4\u4ef6\u3002 // Called before your application initializes. func configure(_ app: Application) throws { ...... // Register middleware app.register(extension: MiddlewareConfiguration.self) { middlewares, app in // Serves files from `Public/` directory middlewares.use(app.make(FileMiddleware.self)) } ...... } \u7136\u540e\uff0c\u6240\u6709 Public/ \u76ee\u5f55\u4e0b\u7684\u8d44\u6e90\u6587\u4ef6\u5747\u53ef\u76f4\u63a5\u88ab\u8bbf\u95ee\u4e86\u3002\u6bd4\u5982 Public/ \u76ee\u5f55\u4e0b\u6709\u4e00\u5f20\u56fe\u7247\uff08\u547d\u540d\u4e3a sample.png \uff09\uff0c\u5728\u672c\u5730\u670d\u52a1\u5df2\u542f\u52a8\u7684\u60c5\u51b5\u4e0b\uff08\u5047\u8bbe\u6240\u5360\u7aef\u53e3\u4e3a 8080 \uff09\uff0c\u8bbf\u95ee http://localhost:8080/sample.png \u5730\u5740\u53ef\u76f4\u63a5\u663e\u793a Public/ \u76ee\u5f55\u4e0b\u7684 sample.png \u56fe\u7247\u3002 \u6548\u679c\u5982\u4e0b Sources \u8be5\u76ee\u5f55\u7528\u4e8e\u5b58\u653e\u6e90\u4ee3\u7801\u3002 App \u4e3b\u8981\u662f\u7528\u6765\u5b58\u653e\u4e1a\u52a1\u76f8\u5173\u7684\u4ee3\u7801\u3002 Controllers\uff1a\u7528\u4e8e\u5b58\u653e\u5177\u4f53\u4e1a\u52a1\u903b\u8f91\u7684\u5b9e\u73b0\u4ee3\u7801\u3002 Migrations\uff1a\u7528\u4e8e\u5b58\u653e\u6570\u636e\u5e93\u8fc1\u79fb\u76f8\u5173\u7684\u4ee3\u7801\u3002 Models\uff1a\u7528\u4e8e\u5b58\u653e\u6570\u636e\u6a21\u578b\u76f8\u5173\u7684\u4ee3\u7801\u3002 app.swift\uff1a\u7528\u4e8e\u670d\u52a1\u521d\u59cb\u5316\u76f8\u5173\u7684\u4ee3\u7801\u6587\u4ef6\u3002 configure.swift\uff1a\u7528\u4e8e\u670d\u52a1\u914d\u7f6e\u76f8\u5173\u7684\u4ee3\u7801\u6587\u4ef6\u3002 routes.swift\uff1a\u7528\u4e8e API \u8bf7\u6c42\u7684\u8def\u7531\u63a7\u5236\u3002 Run \u8be5\u76ee\u5f55\u4e0b\u6709\u4e00\u4e2a main.swift \u6587\u4ef6\uff0c\u662f\u6574\u4e2a\u7a0b\u5e8f\u7684\u6267\u884c\u5165\u53e3\u3002 Tests \u8be5\u76ee\u5f55\u4e3b\u8981\u662f\u7528\u4e8e\u5b58\u653e\u6d4b\u8bd5\u76f8\u5173\u7684\u4ee3\u7801\u3002 Package.swift Vapor \u9879\u76ee\u6240\u4f9d\u8d56\u7684\u5e93\u662f\u901a\u8fc7 SPM\uff08Swift Package Manager\uff09 \u6765\u8fdb\u884c\u7ba1\u7406\u7684\u3002 \u793a\u4f8b\u5982\u4e0b // swift-tools-version:5.1 import PackageDescription let package = Package( name: app , platforms: [ .macOS(.v10_15) ], products: [ .executable(name: Run , targets: [ Run ]), .library(name: App , targets: [ App ]), ], dependencies: [ // \ud83d\udca7 A server-side Swift web framework. .package(url: https://github.com/vapor/vapor.git , from: 4.0.0-beta ), .package(url: https://github.com/vapor/fluent.git , from: 4.0.0-beta ), .package(url: https://github.com/vapor/fluent-sqlite-driver.git , from: 4.0.0-beta ), ], targets: [ .target(name: App , dependencies: [ Fluent , FluentSQLiteDriver , Vapor ]), .target(name: Run , dependencies: [ App ]), .testTarget(name: AppTests , dependencies: [ App ]) ] ) \u7b80\u6790 Vapor \u542f\u52a8\u8fc7\u7a0b \u63a5\u4e0b\u6765\u6211\u4eec\u7b80\u5355\u5206\u6790\u4e0b Vapor \u793a\u4f8b\u9879\u76ee\u542f\u52a8\u7684\u8fc7\u7a0b\u3002 \u9996\u5148\u6765\u770b\u4e0b main.swift \u6587\u4ef6\uff0c\u8fd9\u4e2a\u662f\u6574\u4e2a\u7a0b\u5e8f\u6267\u884c\u7684\u5165\u53e3\u3002 import App try app(.detect()).run() \u53ea\u6709\u7b80\u77ed\u7684\u4e24\u884c\u4ee3\u7801\uff0c\u7b2c\u4e00\u884c import App \u662f\u7528\u6765\u5bfc\u5165 App library \u7684\uff0c\u7136\u540e\u518d\u6267\u884c try app(.detect()).run() \u8fd0\u884c\u670d\u52a1\u3002 \u5176\u4e2d\uff0c .detect() \u65b9\u6cd5\u662f\u7528\u6765\u68c0\u6d4b\u5f53\u524d\u8fd0\u884c\u73af\u5883\uff0c\u6e90\u7801\u5982\u4e0b public static func detect(arguments: [String] = CommandLine.arguments) throws - Environment { var commandInput = CommandInput(arguments: arguments) return try Environment.detect(from: commandInput) } detect() \u5c06\u8fd4\u56de\u4e00\u4e2a Environment \u5b9e\u4f8b\uff0c\u5e76\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9 app() \u65b9\u6cd5\uff0c app() \u65b9\u6cd5\u5b9a\u4e49\u5728 app.swift \u4e2d\uff0c\u6e90\u7801\u5982\u4e0b public func app(_ environment: Environment) throws - Application { var environment = environment try LoggingSystem.bootstrap(from: environment) let app = Application(environment: environment) try configure(app) return app } \u4ece\u4e2d\u53ef\u4ee5\u770b\u51fa\uff0c\u6839\u636e environment \u53c2\u6570\uff0c\u5148\u521d\u59cb\u5316\u4e86\u65e5\u5fd7\u7cfb\u7edf LoggingSystem \uff0c\u7136\u540e\u521b\u5efa\u4e86 Application \u5b9e\u4f8b\u5bf9\u8c61\uff0c\u6700\u540e\u518d\u8c03\u7528 configure() \u65b9\u6cd5\u6765\u521d\u59cb\u5316\u914d\u7f6e\u3002 configure() \u65b9\u6cd5\u5b9a\u4e49\u5728 configure.swift \u4e2d\uff0c\u6e90\u7801\u5982\u4e0b // Called before your application initializes. func configure(_ app: Application) throws { // Register providers first app.provider(FluentProvider()) // Register middleware app.register(extension: MiddlewareConfiguration.self) { middlewares, app in // Serves files from `Public/` directory middlewares.use(app.make(FileMiddleware.self)) } app.databases.sqlite( configuration: .init(storage: .connection(.file(path: db.sqlite ))), threadPool: app.make(), poolConfiguration: app.make(), logger: app.make(), on: app.make() ) app.register(Migrations.self) { c in var migrations = Migrations() migrations.add(CreateTodo(), to: .sqlite) return migrations } try routes(app) } \u4ece\u6e90\u7801\u4e2d\u53ef\u89c1\uff0c configure() \u65b9\u6cd5\u5185\u90e8\u6ce8\u518c\u4e86 provider \uff08\u6bd4\u5982\uff1a FluentProvider \uff09\u3001 middleware \uff08\u6bd4\u5982\uff1a FileMiddleware \uff09\u3001\u6570\u636e\u5e93\u76f8\u5173\u7684\u914d\u7f6e\uff0c\u4ee5\u53ca API \u8def\u7531\u7684\u914d\u7f6e\u3002\uff08\u6ce8\uff1a\u8fd9\u91cc\u5c31\u4e0d\u5c55\u5f00\u8ba8\u8bba\u8fd9\u4e9b Vapor \u7ec4\u4ef6\u4e86\uff0c\u6bd4\u5982 Provider \u3001 Middleware \u7b49\u7b49\uff0c\u540e\u7eed\u7ae0\u8282\u5c06\u8fdb\u884c\u8be6\u7ec6\u4ecb\u7ecd\u3002\uff09 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u770b\u4e0b routes() \u65b9\u6cd5\u7684\u5b9e\u73b0\uff0c\u5b83\u662f\u5b9a\u4e49\u5728 routes.swift \u6587\u4ef6\u4e2d\uff0c\u6e90\u7801\u5982\u4e0b func routes(_ app: Application) throws { app.get { req in return It works! } app.get( hello ) { req in return Hello, world! } let todoController = TodoController() app.get( todos , use: todoController.index) app.post( todos , use: todoController.create) app.on(.DELETE, todos , :todoID , use: todoController.delete) } \u4e4b\u524d\uff0c\u8bbf\u95ee http://127.0.0.1:8080 \u5730\u5740\uff0c\u8fd4\u56de\u4e86 It works! \u6587\u672c\uff0c\u5176\u5b9e\u5bf9\u5e94\u7684\u5c31\u662f\u8fd9\u90e8\u5206\u4ee3\u7801\u3002 app.get { req in return It works! } \u8fd9\u662f\u5728\u6839\u8def\u5f84\u4e0b\uff0c\u76d1\u542c\u4e86 GET \u884c\u4e3a\uff0c\u5f53\u901a\u8fc7 GET \u65b9\u5f0f\u8bf7\u6c42\u6839\u8def\u5f84\uff08\u6bd4\u5982\uff1a http://127.0.0.1:8080 \uff09\u65f6\uff0c\u5c06\u8fd4\u56de\u4e00\u4e32\u6587\u672c It works! \u3002 \u540c\u7406\uff0c\u7b2c\u4e8c\u6bb5\u4ee3\u7801 app.get( hello ) { req in return Hello, world! } \u76d1\u542c\u4e86\u8def\u5f84\u4e3a hello \u7684 GET \u8bf7\u6c42\uff0c\u5f53\u901a\u8fc7 GET \u65b9\u5f0f\u8bf7\u6c42\u5bf9\u5e94\u8def\u5f84\uff08\u6bd4\u5982\uff1a http://127.0.0.1:8080/hello \uff09\u65f6\uff0c\u5c06\u8fd4\u56de\u4e00\u4e32\u6587\u672c Hello, world! \u3002 \u518d\u770b\u4e0b\u7b2c\u4e09\u6bb5\u4ee3\u7801 let todoController = TodoController() // \u8bf7\u6c42\u8def\u5f84\uff1atodos\uff0c\u8bf7\u6c42\u65b9\u6cd5: GET\uff0c\u54cd\u5e94\u65b9\u6cd5\uff1aindex\u3002 app.get( todos , use: todoController.index) // \u8bf7\u6c42\u8def\u5f84\uff1atodos\uff0c\u8bf7\u6c42\u65b9\u6cd5: POST\uff0c\u54cd\u5e94\u65b9\u6cd5\uff1acreate\u3002 app.post( todos , use: todoController.create) // \u8bf7\u6c42\u8def\u5f84\uff1atodos\uff0c\u8bf7\u6c42\u65b9\u6cd5: DELETE\uff0c\u54cd\u5e94\u65b9\u6cd5\uff1adelete\u3002 app.on(.DELETE, todos , :todoID , use: todoController.delete) \u8def\u5f84\u4e3a todos \u7684\u8bf7\u6c42\uff08 GET \u3001 POST \u3001 DELETE \uff09\u90fd\u5c06\u88ab\u6620\u5c04\u5230 TodoController \u4e2d\uff0c\u5728\u8be5 Controller \u4e2d\u53ef\u4ee5\u5904\u7406\u76f8\u5173\u7684\u4e1a\u52a1\u903b\u8f91\u3002 struct TodoController { func index(req: Request) throws - EventLoopFuture [Todo] { ...... } func create(req: Request) throws - EventLoopFuture Todo { ...... } func delete(req: Request) throws - EventLoopFuture HTTPStatus { ...... } } \u56de\u5230 main.swift \u6587\u4ef6\uff0c\u5f53 app() \u65b9\u6cd5\u6267\u884c\u5b8c\u6bd5\u540e\uff0c\u6700\u540e\u5c06\u6267\u884c run() \u65b9\u6cd5\u6765\u542f\u52a8\u670d\u52a1\u3002 try app(.detect()).run() run() \u6e90\u7801\u5982\u4e0b public func run() throws { defer { self.shutdown() } do { try self.start() try self.running?.onStop.wait() } catch { self.logger.report(error: error) throw error } } \u81f3\u6b64\uff0c\u6211\u4eec\u5bf9 Vapor \u9879\u76ee\u542f\u52a8\u7684\u6267\u884c\u8fc7\u7a0b\u6709\u4e86\u5927\u81f4\u7684\u4e86\u89e3\uff0c\u540e\u9762\u5c06\u5177\u4f53\u4ecb\u7ecd Vapor \u7684\u5404\u4e2a\u6a21\u5757\u3002","title":"Hello World"},{"location":"hello_world/#hello-world","text":"\u672c\u7ae0\u6559\u7a0b\u6559\u5c06\u5e26\u4f60\u521b\u5efa\u7b2c\u4e00\u4e2a Vapor \u9879\u76ee\u3002","title":"Hello World"},{"location":"hello_world/#_1","text":"\u901a\u8fc7 vapor \u547d\u4ee4\u884c\u5de5\u5177\u521b\u5efa\u9879\u76ee\uff0c\u9879\u76ee\u540d\u79f0\u547d\u540d\u4e3a Vapor4Example \u3002 vapor new Vapor4Example -branch=4 \u521b\u5efa\u6210\u529f\u540e\uff0c\u5c06\u8f93\u51fa\u5982\u4e0b\u4fe1\u606f\u3002 Cloning Template [Done] Updating Package Name [Done] Initializing git repository [Done] ** **~~** **~~~~~~** **~~~~~~~~~~** **~~~~~~~~~~~~~~** **~~~~~~~~~~~~~~~~~~** **~~~~~~~~~~~~~~~~~~~~~~** **~~~~~~~~~~~~~~~~~~~~~~~~** **~~~~~~~~~~~~~~~~~~~~~~~~~~** **~~~~~~~~~~~~~~~~~~~~~~~~~~~~** **~~~~~~~~~~~~~~~~~~~~~~~~~~~~** **~~~~~~~~~~~~~~~~~~~~~++++~~~** **~~~~~~~~~~~~~~~~~~~++++~~~** ***~~~~~~~~~~~~~~~++++~~~*** ****~~~~~~~~~~++++~~**** *****~~~~~~~~~***** ************* _ __ ___ ___ ___ \\ \\ / / /\\ | |_) / / \\ | |_) \\_\\/ /_/--\\ |_| \\_\\_/ |_| \\ a web framework for Swift Project Vapor4Example has been created. Type `cd Vapor4Example` to enter the project directory. Use `vapor cloud deploy` to host your project for free! Enjoy!","title":"\u521b\u5efa\u9879\u76ee"},{"location":"hello_world/#_2","text":"\u6b64\u65f6\uff0c\u6211\u4eec\u5148\u4e0d\u5206\u6790\u4ee3\u7801\uff0c\u5148\u5c06\u8be5 vapor \u9879\u76ee run \u8d77\u6765\uff0c\u770b\u770b\u6700\u7ec8\u6548\u679c\u3002 \u6b65\u9aa4\u5982\u4e0b\uff1a \u6267\u884c cd Vapor4Example \u8fdb\u5165\u5230\u521a\u521b\u5efa\u597d\u7684\u9879\u76ee\u76ee\u5f55\u4e2d\u3002 \u901a\u8fc7\u5982\u4e0b\u547d\u4ee4 build \u9879\u76ee\u4ee3\u7801\u3002 vapor build build \u6210\u529f\u540e\u5c06\u8f93\u51fa\u5982\u4e0b\u4fe1\u606f\u3002 Building Project [Done] \u901a\u8fc7\u5982\u4e0b\u547d\u4ee4 run \u9879\u76ee\u3002 vapor run \u8fd9\u65f6\u5019\u5c06\u8f93\u51fa\u5982\u4e0b\u4fe1\u606f\u3002 Running app ... [ NOTICE ] Server starting on http://127.0.0.1:8080 \u7136\u540e\u8bbf\u95ee http://127.0.0.1:8080 \u5730\u5740\uff0c\u5982\u679c\u8fd4\u56de It works! \uff0c\u5219\u610f\u5473\u7740\u4f60\u7684\u7b2c\u4e00\u4e2a vapor \u9879\u76ee\u5df2\u7ecf run \u6210\u529f\u4e86\u3002","title":"\u8fd0\u884c\u9879\u76ee"},{"location":"hello_world/#xcode","text":"\u6267\u884c vapor xcode \u547d\u4ee4\uff0c\u5c06\u4f1a\u81ea\u52a8\u751f\u6210\u4e00\u4e2a\u5b8c\u6574\u7684 Xcode \u9879\u76ee\u3002 $ vapor xcode Generating Xcode Project [Done] Select the `Run` scheme to run. Open Xcode project? y/n y Opening Xcode project... \u53ef\u4ee5\u9009\u62e9 Xcode \u4e2d\u7684 Run scheme \u8fdb\u884c\u7f16\u8bd1\u8fd0\u884c\u3002 \u5982\u56fe\u6240\u793a","title":"\u751f\u6210 Xcode \u9879\u76ee"},{"location":"hello_world/#_3","text":"\u63a5\u4e0b\u6765\u5c06\u5206\u6790\u4e0b\u9879\u76ee\u7684\u76ee\u5f55\u7ed3\u6784\uff0c\u5982\u4e0b\u6240\u793a\u3002 . \u251c\u2500\u2500 Public \u251c\u2500\u2500 Sources \u2502 \u251c\u2500\u2500 App \u2502 \u2502 \u251c\u2500\u2500 Controllers \u2502 \u2502 \u251c\u2500\u2500 Migrations \u2502 \u2502 \u251c\u2500\u2500 Models \u2502 \u2502 \u251c\u2500\u2500 app.swift \u2502 \u2502 \u251c\u2500\u2500 configure.swift \u2502 \u2502 \u2514\u2500\u2500 routes.swift \u2502 \u2514\u2500\u2500 Run \u2502 \u2514\u2500\u2500 main.swift \u251c\u2500\u2500 Tests \u2502 \u2514\u2500\u2500 AppTests \u2514\u2500\u2500 Package.swift","title":"\u76ee\u5f55\u7ed3\u6784"},{"location":"hello_world/#public","text":"\u8be5\u76ee\u5f55\u4e3b\u8981\u5b58\u653e\u4e00\u4e9b\u53ef\u516c\u5f00\u8bbf\u95ee\u7684\u8d44\u6e90\u6587\u4ef6\uff0c\u6bd4\u5982\u56fe\u7247\u6587\u4ef6\u3001CSS \u6587\u4ef6\u4ee5\u53ca JavaScript \u6587\u4ef6\u7b49\u3002 \u9996\u5148\uff0c\u9700\u4fee\u6539 configure.swift \u6587\u4ef6\u6765\u5f00\u542f\u4f7f\u7528 FileMiddleware \u4e2d\u95f4\u4ef6\u3002 // Called before your application initializes. func configure(_ app: Application) throws { ...... // Register middleware app.register(extension: MiddlewareConfiguration.self) { middlewares, app in // Serves files from `Public/` directory middlewares.use(app.make(FileMiddleware.self)) } ...... } \u7136\u540e\uff0c\u6240\u6709 Public/ \u76ee\u5f55\u4e0b\u7684\u8d44\u6e90\u6587\u4ef6\u5747\u53ef\u76f4\u63a5\u88ab\u8bbf\u95ee\u4e86\u3002\u6bd4\u5982 Public/ \u76ee\u5f55\u4e0b\u6709\u4e00\u5f20\u56fe\u7247\uff08\u547d\u540d\u4e3a sample.png \uff09\uff0c\u5728\u672c\u5730\u670d\u52a1\u5df2\u542f\u52a8\u7684\u60c5\u51b5\u4e0b\uff08\u5047\u8bbe\u6240\u5360\u7aef\u53e3\u4e3a 8080 \uff09\uff0c\u8bbf\u95ee http://localhost:8080/sample.png \u5730\u5740\u53ef\u76f4\u63a5\u663e\u793a Public/ \u76ee\u5f55\u4e0b\u7684 sample.png \u56fe\u7247\u3002 \u6548\u679c\u5982\u4e0b","title":"Public"},{"location":"hello_world/#sources","text":"\u8be5\u76ee\u5f55\u7528\u4e8e\u5b58\u653e\u6e90\u4ee3\u7801\u3002","title":"Sources"},{"location":"hello_world/#app","text":"\u4e3b\u8981\u662f\u7528\u6765\u5b58\u653e\u4e1a\u52a1\u76f8\u5173\u7684\u4ee3\u7801\u3002 Controllers\uff1a\u7528\u4e8e\u5b58\u653e\u5177\u4f53\u4e1a\u52a1\u903b\u8f91\u7684\u5b9e\u73b0\u4ee3\u7801\u3002 Migrations\uff1a\u7528\u4e8e\u5b58\u653e\u6570\u636e\u5e93\u8fc1\u79fb\u76f8\u5173\u7684\u4ee3\u7801\u3002 Models\uff1a\u7528\u4e8e\u5b58\u653e\u6570\u636e\u6a21\u578b\u76f8\u5173\u7684\u4ee3\u7801\u3002 app.swift\uff1a\u7528\u4e8e\u670d\u52a1\u521d\u59cb\u5316\u76f8\u5173\u7684\u4ee3\u7801\u6587\u4ef6\u3002 configure.swift\uff1a\u7528\u4e8e\u670d\u52a1\u914d\u7f6e\u76f8\u5173\u7684\u4ee3\u7801\u6587\u4ef6\u3002 routes.swift\uff1a\u7528\u4e8e API \u8bf7\u6c42\u7684\u8def\u7531\u63a7\u5236\u3002","title":"App"},{"location":"hello_world/#run","text":"\u8be5\u76ee\u5f55\u4e0b\u6709\u4e00\u4e2a main.swift \u6587\u4ef6\uff0c\u662f\u6574\u4e2a\u7a0b\u5e8f\u7684\u6267\u884c\u5165\u53e3\u3002","title":"Run"},{"location":"hello_world/#tests","text":"\u8be5\u76ee\u5f55\u4e3b\u8981\u662f\u7528\u4e8e\u5b58\u653e\u6d4b\u8bd5\u76f8\u5173\u7684\u4ee3\u7801\u3002","title":"Tests"},{"location":"hello_world/#packageswift","text":"Vapor \u9879\u76ee\u6240\u4f9d\u8d56\u7684\u5e93\u662f\u901a\u8fc7 SPM\uff08Swift Package Manager\uff09 \u6765\u8fdb\u884c\u7ba1\u7406\u7684\u3002 \u793a\u4f8b\u5982\u4e0b // swift-tools-version:5.1 import PackageDescription let package = Package( name: app , platforms: [ .macOS(.v10_15) ], products: [ .executable(name: Run , targets: [ Run ]), .library(name: App , targets: [ App ]), ], dependencies: [ // \ud83d\udca7 A server-side Swift web framework. .package(url: https://github.com/vapor/vapor.git , from: 4.0.0-beta ), .package(url: https://github.com/vapor/fluent.git , from: 4.0.0-beta ), .package(url: https://github.com/vapor/fluent-sqlite-driver.git , from: 4.0.0-beta ), ], targets: [ .target(name: App , dependencies: [ Fluent , FluentSQLiteDriver , Vapor ]), .target(name: Run , dependencies: [ App ]), .testTarget(name: AppTests , dependencies: [ App ]) ] )","title":"Package.swift"},{"location":"hello_world/#vapor","text":"\u63a5\u4e0b\u6765\u6211\u4eec\u7b80\u5355\u5206\u6790\u4e0b Vapor \u793a\u4f8b\u9879\u76ee\u542f\u52a8\u7684\u8fc7\u7a0b\u3002 \u9996\u5148\u6765\u770b\u4e0b main.swift \u6587\u4ef6\uff0c\u8fd9\u4e2a\u662f\u6574\u4e2a\u7a0b\u5e8f\u6267\u884c\u7684\u5165\u53e3\u3002 import App try app(.detect()).run() \u53ea\u6709\u7b80\u77ed\u7684\u4e24\u884c\u4ee3\u7801\uff0c\u7b2c\u4e00\u884c import App \u662f\u7528\u6765\u5bfc\u5165 App library \u7684\uff0c\u7136\u540e\u518d\u6267\u884c try app(.detect()).run() \u8fd0\u884c\u670d\u52a1\u3002 \u5176\u4e2d\uff0c .detect() \u65b9\u6cd5\u662f\u7528\u6765\u68c0\u6d4b\u5f53\u524d\u8fd0\u884c\u73af\u5883\uff0c\u6e90\u7801\u5982\u4e0b public static func detect(arguments: [String] = CommandLine.arguments) throws - Environment { var commandInput = CommandInput(arguments: arguments) return try Environment.detect(from: commandInput) } detect() \u5c06\u8fd4\u56de\u4e00\u4e2a Environment \u5b9e\u4f8b\uff0c\u5e76\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9 app() \u65b9\u6cd5\uff0c app() \u65b9\u6cd5\u5b9a\u4e49\u5728 app.swift \u4e2d\uff0c\u6e90\u7801\u5982\u4e0b public func app(_ environment: Environment) throws - Application { var environment = environment try LoggingSystem.bootstrap(from: environment) let app = Application(environment: environment) try configure(app) return app } \u4ece\u4e2d\u53ef\u4ee5\u770b\u51fa\uff0c\u6839\u636e environment \u53c2\u6570\uff0c\u5148\u521d\u59cb\u5316\u4e86\u65e5\u5fd7\u7cfb\u7edf LoggingSystem \uff0c\u7136\u540e\u521b\u5efa\u4e86 Application \u5b9e\u4f8b\u5bf9\u8c61\uff0c\u6700\u540e\u518d\u8c03\u7528 configure() \u65b9\u6cd5\u6765\u521d\u59cb\u5316\u914d\u7f6e\u3002 configure() \u65b9\u6cd5\u5b9a\u4e49\u5728 configure.swift \u4e2d\uff0c\u6e90\u7801\u5982\u4e0b // Called before your application initializes. func configure(_ app: Application) throws { // Register providers first app.provider(FluentProvider()) // Register middleware app.register(extension: MiddlewareConfiguration.self) { middlewares, app in // Serves files from `Public/` directory middlewares.use(app.make(FileMiddleware.self)) } app.databases.sqlite( configuration: .init(storage: .connection(.file(path: db.sqlite ))), threadPool: app.make(), poolConfiguration: app.make(), logger: app.make(), on: app.make() ) app.register(Migrations.self) { c in var migrations = Migrations() migrations.add(CreateTodo(), to: .sqlite) return migrations } try routes(app) } \u4ece\u6e90\u7801\u4e2d\u53ef\u89c1\uff0c configure() \u65b9\u6cd5\u5185\u90e8\u6ce8\u518c\u4e86 provider \uff08\u6bd4\u5982\uff1a FluentProvider \uff09\u3001 middleware \uff08\u6bd4\u5982\uff1a FileMiddleware \uff09\u3001\u6570\u636e\u5e93\u76f8\u5173\u7684\u914d\u7f6e\uff0c\u4ee5\u53ca API \u8def\u7531\u7684\u914d\u7f6e\u3002\uff08\u6ce8\uff1a\u8fd9\u91cc\u5c31\u4e0d\u5c55\u5f00\u8ba8\u8bba\u8fd9\u4e9b Vapor \u7ec4\u4ef6\u4e86\uff0c\u6bd4\u5982 Provider \u3001 Middleware \u7b49\u7b49\uff0c\u540e\u7eed\u7ae0\u8282\u5c06\u8fdb\u884c\u8be6\u7ec6\u4ecb\u7ecd\u3002\uff09 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u770b\u4e0b routes() \u65b9\u6cd5\u7684\u5b9e\u73b0\uff0c\u5b83\u662f\u5b9a\u4e49\u5728 routes.swift \u6587\u4ef6\u4e2d\uff0c\u6e90\u7801\u5982\u4e0b func routes(_ app: Application) throws { app.get { req in return It works! } app.get( hello ) { req in return Hello, world! } let todoController = TodoController() app.get( todos , use: todoController.index) app.post( todos , use: todoController.create) app.on(.DELETE, todos , :todoID , use: todoController.delete) } \u4e4b\u524d\uff0c\u8bbf\u95ee http://127.0.0.1:8080 \u5730\u5740\uff0c\u8fd4\u56de\u4e86 It works! \u6587\u672c\uff0c\u5176\u5b9e\u5bf9\u5e94\u7684\u5c31\u662f\u8fd9\u90e8\u5206\u4ee3\u7801\u3002 app.get { req in return It works! } \u8fd9\u662f\u5728\u6839\u8def\u5f84\u4e0b\uff0c\u76d1\u542c\u4e86 GET \u884c\u4e3a\uff0c\u5f53\u901a\u8fc7 GET \u65b9\u5f0f\u8bf7\u6c42\u6839\u8def\u5f84\uff08\u6bd4\u5982\uff1a http://127.0.0.1:8080 \uff09\u65f6\uff0c\u5c06\u8fd4\u56de\u4e00\u4e32\u6587\u672c It works! \u3002 \u540c\u7406\uff0c\u7b2c\u4e8c\u6bb5\u4ee3\u7801 app.get( hello ) { req in return Hello, world! } \u76d1\u542c\u4e86\u8def\u5f84\u4e3a hello \u7684 GET \u8bf7\u6c42\uff0c\u5f53\u901a\u8fc7 GET \u65b9\u5f0f\u8bf7\u6c42\u5bf9\u5e94\u8def\u5f84\uff08\u6bd4\u5982\uff1a http://127.0.0.1:8080/hello \uff09\u65f6\uff0c\u5c06\u8fd4\u56de\u4e00\u4e32\u6587\u672c Hello, world! \u3002 \u518d\u770b\u4e0b\u7b2c\u4e09\u6bb5\u4ee3\u7801 let todoController = TodoController() // \u8bf7\u6c42\u8def\u5f84\uff1atodos\uff0c\u8bf7\u6c42\u65b9\u6cd5: GET\uff0c\u54cd\u5e94\u65b9\u6cd5\uff1aindex\u3002 app.get( todos , use: todoController.index) // \u8bf7\u6c42\u8def\u5f84\uff1atodos\uff0c\u8bf7\u6c42\u65b9\u6cd5: POST\uff0c\u54cd\u5e94\u65b9\u6cd5\uff1acreate\u3002 app.post( todos , use: todoController.create) // \u8bf7\u6c42\u8def\u5f84\uff1atodos\uff0c\u8bf7\u6c42\u65b9\u6cd5: DELETE\uff0c\u54cd\u5e94\u65b9\u6cd5\uff1adelete\u3002 app.on(.DELETE, todos , :todoID , use: todoController.delete) \u8def\u5f84\u4e3a todos \u7684\u8bf7\u6c42\uff08 GET \u3001 POST \u3001 DELETE \uff09\u90fd\u5c06\u88ab\u6620\u5c04\u5230 TodoController \u4e2d\uff0c\u5728\u8be5 Controller \u4e2d\u53ef\u4ee5\u5904\u7406\u76f8\u5173\u7684\u4e1a\u52a1\u903b\u8f91\u3002 struct TodoController { func index(req: Request) throws - EventLoopFuture [Todo] { ...... } func create(req: Request) throws - EventLoopFuture Todo { ...... } func delete(req: Request) throws - EventLoopFuture HTTPStatus { ...... } } \u56de\u5230 main.swift \u6587\u4ef6\uff0c\u5f53 app() \u65b9\u6cd5\u6267\u884c\u5b8c\u6bd5\u540e\uff0c\u6700\u540e\u5c06\u6267\u884c run() \u65b9\u6cd5\u6765\u542f\u52a8\u670d\u52a1\u3002 try app(.detect()).run() run() \u6e90\u7801\u5982\u4e0b public func run() throws { defer { self.shutdown() } do { try self.start() try self.running?.onStop.wait() } catch { self.logger.report(error: error) throw error } } \u81f3\u6b64\uff0c\u6211\u4eec\u5bf9 Vapor \u9879\u76ee\u542f\u52a8\u7684\u6267\u884c\u8fc7\u7a0b\u6709\u4e86\u5927\u81f4\u7684\u4e86\u89e3\uff0c\u540e\u9762\u5c06\u5177\u4f53\u4ecb\u7ecd Vapor \u7684\u5404\u4e2a\u6a21\u5757\u3002","title":"\u7b80\u6790 Vapor \u542f\u52a8\u8fc7\u7a0b"},{"location":"test/","text":"\u6d4b\u8bd5 TODO","title":"\u6d4b\u8bd5"},{"location":"test/#_1","text":"TODO","title":"\u6d4b\u8bd5"},{"location":"toolbox/","text":"Toolbox TODO","title":"Toolbox"},{"location":"toolbox/#toolbox","text":"TODO","title":"Toolbox"},{"location":"base/application/","text":"Application Application \u662f Vapor \u4e2d\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u7c7b\uff0c\u8d1f\u8d23\u7ba1\u7406\u5404\u7c7b\u57fa\u7840\u7ec4\u4ef6\uff08\u6bd4\u5982\uff1aProvider\u3001Middleware\u3001Database\u3001Route \u7b49\u7b49\uff09\u3002 Application \u7684\u90e8\u5206\u6e90\u7801\u5982\u4e0b public final class Application { public var environment: Environment public var services: Services public let sync: Lock public var userInfo: [AnyHashable: Any] public private(set) var didShutdown: Bool internal let eventLoopGroup: EventLoopGroup public var logger: Logger private var isBooted: Bool public var providers: [Provider] { return self.services.providers } public init(environment: Environment = .development) { self.environment = environment self.services = .init() self.sync = .init() self.userInfo = [:] self.didShutdown = false self.eventLoopGroup = MultiThreadedEventLoopGroup(numberOfThreads: System.coreCount) self.logger = .init(label: codes.vapor.application ) self.isBooted = false self.registerDefaultServices() } ...... } extension Application: RoutesBuilder { public func add(_ route: Route) { self.routes.add(route) } public var routes: Routes { return self.make() } } \u5176\u4e2d environment \uff1a\u4e3b\u8981\u7528\u4e8e\u5b58\u653e\u7a0b\u5e8f\u5f53\u524d\u8fd0\u884c\u73af\u5883\u76f8\u5173\u7684\u6570\u636e\u3002 providers \uff1a\u4e3b\u8981\u7528\u4e8e\u7ba1\u7406\u5404\u79cd\u7c7b\u578b\u7684 Provider \u3002 services \uff1a\u4e3b\u8981\u7528\u4e8e\u7ba1\u7406\u5404\u79cd\u7c7b\u578b\u7684\u670d\u52a1\u7ec4\u4ef6\u3002 routes \uff1a\u4e3b\u8981\u7528\u4e8e\u7ba1\u7406 API \u8def\u7531\u3002 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u6765\u770b\u4e0b App \u76ee\u5f55\u4e2d\u7684 app.swift \u6587\u4ef6\u3002 public func app(_ environment: Environment) throws - Application { var environment = environment try LoggingSystem.bootstrap(from: environment) // \u6b64\u5904\u6784\u9020\u51fa\u4e86 Application \u5b9e\u4f8b\u5bf9\u8c61 let app = Application(environment: environment) try configure(app) return app } \u8fd8\u6709 configure.swift \u6587\u4ef6\u3002 // Called before your application initializes. func configure(_ app: Application) throws { // Register providers first app.provider(FluentProvider()) // Register middleware app.register(extension: MiddlewareConfiguration.self) { middlewares, app in // Serves files from `Public/` directory middlewares.use(app.make(FileMiddleware.self)) } app.databases.sqlite( configuration: .init(storage: .connection(.file(path: db.sqlite ))), threadPool: app.make(), poolConfiguration: app.make(), logger: app.make(), on: app.make() ) app.register(Migrations.self) { c in var migrations = Migrations() migrations.add(CreateTodo(), to: .sqlite) return migrations } try routes(app) } \u6700\u540e\u662f routes.swift \u6587\u4ef6\u3002 func routes(_ app: Application) throws { app.get { req in return It works! } app.get( hello ) { req in return Hello, world! } let todoController = TodoController() app.get( todos , use: todoController.index) app.post( todos , use: todoController.create) app.on(.DELETE, todos , :todoID , use: todoController.delete) } \u4ece\u4e2d\u53ef\u4ee5\u770b\u51fa\uff0c Application \u7ba1\u7406\u7740\u5404\u7c7b\u57fa\u7840\u7ec4\u4ef6\uff08\u6bd4\u5982\uff1aProvider\u3001Middleware\u3001Database\u3001Route \u7b49\u7b49\uff09\uff0c\u5e76\u8d2f\u7a7f\u4e8e\u7a0b\u5e8f\u7684\u6574\u4e2a\u751f\u547d\u5468\u671f\u3002","title":"Application"},{"location":"base/application/#application","text":"Application \u662f Vapor \u4e2d\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u7c7b\uff0c\u8d1f\u8d23\u7ba1\u7406\u5404\u7c7b\u57fa\u7840\u7ec4\u4ef6\uff08\u6bd4\u5982\uff1aProvider\u3001Middleware\u3001Database\u3001Route \u7b49\u7b49\uff09\u3002 Application \u7684\u90e8\u5206\u6e90\u7801\u5982\u4e0b public final class Application { public var environment: Environment public var services: Services public let sync: Lock public var userInfo: [AnyHashable: Any] public private(set) var didShutdown: Bool internal let eventLoopGroup: EventLoopGroup public var logger: Logger private var isBooted: Bool public var providers: [Provider] { return self.services.providers } public init(environment: Environment = .development) { self.environment = environment self.services = .init() self.sync = .init() self.userInfo = [:] self.didShutdown = false self.eventLoopGroup = MultiThreadedEventLoopGroup(numberOfThreads: System.coreCount) self.logger = .init(label: codes.vapor.application ) self.isBooted = false self.registerDefaultServices() } ...... } extension Application: RoutesBuilder { public func add(_ route: Route) { self.routes.add(route) } public var routes: Routes { return self.make() } } \u5176\u4e2d environment \uff1a\u4e3b\u8981\u7528\u4e8e\u5b58\u653e\u7a0b\u5e8f\u5f53\u524d\u8fd0\u884c\u73af\u5883\u76f8\u5173\u7684\u6570\u636e\u3002 providers \uff1a\u4e3b\u8981\u7528\u4e8e\u7ba1\u7406\u5404\u79cd\u7c7b\u578b\u7684 Provider \u3002 services \uff1a\u4e3b\u8981\u7528\u4e8e\u7ba1\u7406\u5404\u79cd\u7c7b\u578b\u7684\u670d\u52a1\u7ec4\u4ef6\u3002 routes \uff1a\u4e3b\u8981\u7528\u4e8e\u7ba1\u7406 API \u8def\u7531\u3002 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u6765\u770b\u4e0b App \u76ee\u5f55\u4e2d\u7684 app.swift \u6587\u4ef6\u3002 public func app(_ environment: Environment) throws - Application { var environment = environment try LoggingSystem.bootstrap(from: environment) // \u6b64\u5904\u6784\u9020\u51fa\u4e86 Application \u5b9e\u4f8b\u5bf9\u8c61 let app = Application(environment: environment) try configure(app) return app } \u8fd8\u6709 configure.swift \u6587\u4ef6\u3002 // Called before your application initializes. func configure(_ app: Application) throws { // Register providers first app.provider(FluentProvider()) // Register middleware app.register(extension: MiddlewareConfiguration.self) { middlewares, app in // Serves files from `Public/` directory middlewares.use(app.make(FileMiddleware.self)) } app.databases.sqlite( configuration: .init(storage: .connection(.file(path: db.sqlite ))), threadPool: app.make(), poolConfiguration: app.make(), logger: app.make(), on: app.make() ) app.register(Migrations.self) { c in var migrations = Migrations() migrations.add(CreateTodo(), to: .sqlite) return migrations } try routes(app) } \u6700\u540e\u662f routes.swift \u6587\u4ef6\u3002 func routes(_ app: Application) throws { app.get { req in return It works! } app.get( hello ) { req in return Hello, world! } let todoController = TodoController() app.get( todos , use: todoController.index) app.post( todos , use: todoController.create) app.on(.DELETE, todos , :todoID , use: todoController.delete) } \u4ece\u4e2d\u53ef\u4ee5\u770b\u51fa\uff0c Application \u7ba1\u7406\u7740\u5404\u7c7b\u57fa\u7840\u7ec4\u4ef6\uff08\u6bd4\u5982\uff1aProvider\u3001Middleware\u3001Database\u3001Route \u7b49\u7b49\uff09\uff0c\u5e76\u8d2f\u7a7f\u4e8e\u7a0b\u5e8f\u7684\u6574\u4e2a\u751f\u547d\u5468\u671f\u3002","title":"Application"},{"location":"base/controller/","text":"Controller TODO","title":"Controller"},{"location":"base/controller/#controller","text":"TODO","title":"Controller"},{"location":"base/middleware/","text":"Middleware TODO","title":"Middleware"},{"location":"base/middleware/#middleware","text":"TODO","title":"Middleware"},{"location":"base/provider/","text":"Provider TODO","title":"Provider"},{"location":"base/provider/#provider","text":"TODO","title":"Provider"},{"location":"base/routing/","text":"Routing TODO","title":"Routing"},{"location":"base/routing/#routing","text":"TODO","title":"Routing"},{"location":"database/mysql/","text":"MySQL TODO","title":"MySQL"},{"location":"database/mysql/#mysql","text":"TODO","title":"MySQL"},{"location":"database/redis/","text":"Redis TODO","title":"Redis"},{"location":"database/redis/#redis","text":"TODO","title":"Redis"},{"location":"install/install_linux/","text":"Linux \u5b89\u88c5 Vapor TODO","title":"Linux"},{"location":"install/install_linux/#linux-vapor","text":"TODO","title":"Linux \u5b89\u88c5 Vapor"},{"location":"install/install_mac/","text":"macOS \u5b89\u88c5 Vapor \u5b89\u88c5 Xcode \u56e0\u4e3a Vapor 4 \u9700\u8981 Swift 5.1\uff08\u6216\u4ee5\u4e0a\uff09 \u7248\u672c\uff0c\u6240\u4ee5\u9700\u8981\u5148\u5b89\u88c5 Xcode 11\uff08\u6216\u4ee5\u4e0a\uff09\u3002 \u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u6765\u786e\u8ba4\u5f53\u524d Swift \u7248\u672c\u3002 swift --version \u5c06\u663e\u793a\u5bf9\u5e94\u7684 Swift \u7248\u672c\u4fe1\u606f\u3002 Apple Swift version 5.1 (swiftlang-1100.0.270.13 clang-1100.0.33.7) Target: x86_64-apple-darwin19.0.0 \u5b89\u88c5 Toolbox \u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\u3002 brew install vapor/tap/vapor \u5b89\u88c5\u6210\u529f\u540e\uff0c\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\uff0c\u5c06\u663e\u793a\u53ef\u7528\u7684\u547d\u4ee4\u5217\u8868\u3002 $ vapor -help Usage: vapor command Join our team chat if you have questions, need help, or want to contribute: http://vapor.team Commands: new Creates a new Vapor application from a template. Use --template=repo/template for github templates Use --template=full-url-here.git for non github templates Use --web to create a new web app Use --auth to create a new authenticated API app Use --api (default) to create a new API build Compiles the application. run Runs the compiled application. fetch Fetches the application's dependencies. update Updates your dependencies. clean Cleans temporary files--usually fixes a plethora of bizarre build errors. test Runs the application's tests. xcode Generates an Xcode project for development. Additionally links commonly used libraries. version Displays Vapor CLI version cloud Commands for interacting with Vapor Cloud. heroku Commands to help deploy to Heroku. provider Commands to help manage providers. Use `vapor command --help` for more information on a command.","title":"macOS"},{"location":"install/install_mac/#macos-vapor","text":"","title":"macOS \u5b89\u88c5 Vapor"},{"location":"install/install_mac/#xcode","text":"\u56e0\u4e3a Vapor 4 \u9700\u8981 Swift 5.1\uff08\u6216\u4ee5\u4e0a\uff09 \u7248\u672c\uff0c\u6240\u4ee5\u9700\u8981\u5148\u5b89\u88c5 Xcode 11\uff08\u6216\u4ee5\u4e0a\uff09\u3002 \u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u6765\u786e\u8ba4\u5f53\u524d Swift \u7248\u672c\u3002 swift --version \u5c06\u663e\u793a\u5bf9\u5e94\u7684 Swift \u7248\u672c\u4fe1\u606f\u3002 Apple Swift version 5.1 (swiftlang-1100.0.270.13 clang-1100.0.33.7) Target: x86_64-apple-darwin19.0.0","title":"\u5b89\u88c5 Xcode"},{"location":"install/install_mac/#toolbox","text":"\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\u3002 brew install vapor/tap/vapor \u5b89\u88c5\u6210\u529f\u540e\uff0c\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\uff0c\u5c06\u663e\u793a\u53ef\u7528\u7684\u547d\u4ee4\u5217\u8868\u3002 $ vapor -help Usage: vapor command Join our team chat if you have questions, need help, or want to contribute: http://vapor.team Commands: new Creates a new Vapor application from a template. Use --template=repo/template for github templates Use --template=full-url-here.git for non github templates Use --web to create a new web app Use --auth to create a new authenticated API app Use --api (default) to create a new API build Compiles the application. run Runs the compiled application. fetch Fetches the application's dependencies. update Updates your dependencies. clean Cleans temporary files--usually fixes a plethora of bizarre build errors. test Runs the application's tests. xcode Generates an Xcode project for development. Additionally links commonly used libraries. version Displays Vapor CLI version cloud Commands for interacting with Vapor Cloud. heroku Commands to help deploy to Heroku. provider Commands to help manage providers. Use `vapor command --help` for more information on a command.","title":"\u5b89\u88c5 Toolbox"}]}